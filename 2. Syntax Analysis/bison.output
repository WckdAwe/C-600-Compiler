Grammar

    0 $accept: program "end of file"

    1 program: global_declarations main_function

    2 global_declarations: global_declarations global_declaration
    3                    | %empty

    4 global_declaration: typedef_declaration
    5                   | enum_declaration
    6                   | class_declaration
    7                   | union_declaration
    8                   | global_var_declaration
    9                   | func_declaration

   10 $@1: %empty

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims T_SEMI

   12 typename: standard_type
   13         | T_ID

   14 standard_type: T_CHAR
   15              | T_INT
   16              | T_FLOAT
   17              | T_STRING
   18              | T_VOID

   19 listspec: T_LIST
   20         | %empty

   21 dims: dims dim
   22     | %empty

   23 dim: T_LBRACK T_ICONST "]"
   24    | T_LBRACK "]"

   25 $@2: %empty

   26 enum_declaration: T_ENUM T_ID $@2 enum_body T_SEMI

   27 enum_body: T_LBRACE id_list T_RBRACE

   28 id_list: id_list T_COMMA T_ID initializer

   29 $@3: %empty

   30 id_list: T_ID $@3 initializer

   31 initializer: T_ASSIGN init_value
   32            | %empty

   33 init_value: expression
   34           | T_LBRACE init_values T_RBRACE

   35 expression: expression T_OROP expression
   36           | expression T_ANDOP expression
   37           | expression T_EQUOP expression
   38           | expression T_RELOP expression
   39           | expression T_ADDOP expression
   40           | expression T_MULOP expression
   41           | T_NOTOP expression
   42           | T_ADDOP expression
   43           | T_SIZEOP expression
   44           | T_INCDEC variable
   45           | variable T_INCDEC
   46           | variable
   47           | variable T_LPAREN expression_list T_RPAREN
   48           | T_LENGTH T_LPAREN general_expression T_RPAREN
   49           | T_NEW T_LPAREN general_expression T_RPAREN
   50           | constant
   51           | T_LPAREN general_expression T_RPAREN
   52           | T_LPAREN standard_type T_RPAREN
   53           | listexpression

   54 variable: variable T_LBRACK general_expression "]"
   55         | variable T_DOT T_ID
   56         | T_LISTFUNC T_LPAREN general_expression T_RPAREN
   57         | decltype T_ID
   58         | T_THIS

   59 general_expression: general_expression T_COMMA general_expression
   60                   | assignment

   61 assignment: variable T_ASSIGN assignment
   62           | expression

   63 expression_list: general_expression
   64                | %empty

   65 constant: T_CCONST
   66         | T_ICONST
   67         | T_FCONST
   68         | T_SCONST

   69 listexpression: T_LBRACK expression_list "]"

   70 init_values: init_values T_COMMA init_value
   71            | init_value

   72 $@4: %empty

   73 class_declaration: T_CLASS T_ID $@4 class_body T_SEMI

   74 class_body: parent T_LBRACE members_methods T_RBRACE

   75 parent: T_COLON T_ID
   76       | %empty

   77 members_methods: members_methods access member_or_method
   78                | access member_or_method

   79 access: T_PRIVATE T_COLON
   80       | T_PROTECTED T_COLON
   81       | T_PUBLIC T_COLON
   82       | %empty

   83 member_or_method: member
   84                 | method

   85 member: var_declaration
   86       | anonymous_union

   87 var_declaration: typename variabledefs T_SEMI

   88 variabledefs: variabledefs T_COMMA variabledef
   89             | variabledef

   90 variabledef: listspec T_ID dims

   91 $@5: %empty

   92 anonymous_union: T_UNION $@5 union_body T_SEMI

   93 union_body: T_LBRACE fields T_RBRACE

   94 fields: fields field
   95       | field

   96 field: var_declaration

   97 method: short_func_declaration

   98 short_func_declaration: short_par_func_header T_SEMI
   99                       | nopar_func_header T_SEMI

  100 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN

  101 func_header_start: typename listspec T_ID

  102 parameter_types: parameter_types T_COMMA typename pass_list_dims
  103                | typename pass_list_dims

  104 pass_list_dims: T_REFER
  105               | listspec dims

  106 nopar_func_header: func_header_start T_LPAREN T_RPAREN

  107 $@6: %empty

  108 union_declaration: T_UNION T_ID $@6 union_body T_SEMI

  109 global_var_declaration: typename init_variabledefs T_SEMI

  110 init_variabledefs: init_variabledefs T_COMMA init_variabledef
  111                  | init_variabledef

  112 init_variabledef: variabledef initializer

  113 func_declaration: short_func_declaration
  114                 | full_func_declaration

  115 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE
  116                      | nopar_class_func_header T_LBRACE decl_statements T_RBRACE
  117                      | nopar_func_header T_LBRACE decl_statements T_RBRACE

  118 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN
  119                     | func_header_start T_LPAREN parameter_list T_RPAREN

  120 class_func_header_start: typename listspec func_class T_ID

  121 func_class: T_ID T_METH

  122 parameter_list: parameter_list T_COMMA typename pass_variabledef
  123               | typename pass_variabledef

  124 pass_variabledef: variabledef
  125                 | T_REFER T_ID

  126 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN

  127 decl_statements: declarations statements
  128                | declarations
  129                | statements
  130                | %empty

  131 declarations: declarations decltype typename variabledefs T_SEMI
  132             | decltype typename variabledefs T_SEMI

  133 decltype: T_STATIC
  134         | %empty

  135 statements: statements statement
  136           | statement

  137 statement: expression_statement
  138          | if_statement
  139          | while_statement
  140          | for_statement
  141          | switch_statement
  142          | return_statement
  143          | io_statement
  144          | comp_statement
  145          | T_CONTINUE T_SEMI
  146          | T_BREAK T_SEMI
  147          | T_SEMI

  148 expression_statement: general_expression T_SEMI

  149 if_statement: T_IF T_LPAREN general_expression T_RPAREN statement if_tail

  150 if_tail: T_ELSE statement
  151        | %empty

  152 while_statement: T_WHILE T_LPAREN general_expression T_RPAREN statement

  153 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

  154 optexpr: general_expression
  155        | %empty

  156 switch_statement: T_SWITCH T_LPAREN general_expression T_RPAREN switch_tail

  157 switch_tail: T_LBRACE decl_cases T_RBRACE
  158            | single_casestatement

  159 decl_cases: declarations casestatements
  160           | declarations
  161           | casestatements
  162           | %empty

  163 casestatements: casestatements casestatement
  164               | casestatement

  165 casestatement: T_CASE constant T_COLON casestatement
  166              | T_CASE constant T_COLON statements
  167              | T_DEFAULT T_COLON statements

  168 single_casestatement: T_CASE constant T_COLON single_casestatement
  169                     | T_CASE constant T_COLON statement

  170 return_statement: T_RETURN optexpr T_SEMI

  171 io_statement: T_CIN T_INP in_list T_SEMI
  172             | T_COUT T_OUT out_list T_SEMI

  173 in_list: in_list T_INP in_item
  174        | in_item

  175 in_item: variable

  176 out_list: out_list T_OUT out_item
  177         | out_item

  178 out_item: general_expression

  179 comp_statement: T_LBRACE decl_statements T_RBRACE

  180 main_function: main_header T_LBRACE decl_statements T_RBRACE

  181 main_header: T_INT T_MAIN T_LPAREN T_RPAREN


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
T_ICONST (258) 23 66
T_FCONST (259) 67
T_TYPEDEF (260) 11
T_CHAR (261) 14
T_STRING (262) 17
T_SCONST (263) 68
T_INT (264) 15 181
T_ENUM (265) 26
T_LENGTH (266) 48
T_CLASS (267) 73
T_PRIVATE (268) 79
T_PROTECTED (269) 80
T_PUBLIC (270) 81
T_STATIC (271) 133
T_UNION (272) 92 108
T_LIST (273) 19
T_CONTINUE (274) 145
T_BREAK (275) 146
T_IF (276) 149
T_ELSE (277) 150
T_WHILE (278) 152
T_FOR (279) 153
T_SWITCH (280) 156
T_DEFAULT (281) 167
T_RETURN (282) 170
T_NEW (283) 49
T_CIN (284) 171
T_COUT (285) 172
T_MAIN (286) 181
T_THIS (287) 58
T_ID (288) 11 13 26 28 30 55 57 73 75 90 101 108 120 121 125
T_OROP (289) 35
T_ANDOP (290) 36
T_EQUOP (291) 37
T_ADDOP (292) 39 42
T_MULOP (293) 40
T_INCDEC (294) 44 45
T_SIZEOP (295) 43
T_LISTFUNC (296) 56
T_LPAREN (297) 47 48 49 51 52 56 100 106 118 119 126 149 152 153 156
    181
T_RPAREN (298) 47 48 49 51 52 56 100 106 118 119 126 149 152 153 156
    181
T_SEMI (299) 11 26 73 87 92 98 99 108 109 131 132 145 146 147 148 153
    170 171 172
T_DOT (300) 55
T_COMMA (301) 28 59 70 88 102 110 122
T_COLON (302) 75 79 80 81 165 166 167 168 169
T_LBRACK (303) 23 24 54 69
T_REFER (304) 104 125
T_LBRACE (305) 27 34 74 93 115 116 117 157 179 180
T_RBRACE (306) 27 34 74 93 115 116 117 157 179 180
T_METH (307) 121
T_INP (308) 171 173
T_OUT (309) 172 176
T_ASSIGN (310) 31 61
T_CASE (311) 165 166 168 169
T_CCONST (312) 65
T_FLOAT (313) 16
T_NOTOP (314) 41
T_RELOP (315) 38
T_VOID (316) 18
"]" (317) 23 24 54 69
UMINUS (318)
LOWER_THAN_ELSE (319)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1, on right: 0
global_declarations (67)
    on left: 2 3, on right: 1 2
global_declaration (68)
    on left: 4 5 6 7 8 9, on right: 2
typedef_declaration (69)
    on left: 11, on right: 4
$@1 (70)
    on left: 10, on right: 11
typename (71)
    on left: 12 13, on right: 11 87 101 102 103 109 120 122 123 131
    132
standard_type (72)
    on left: 14 15 16 17 18, on right: 12 52
listspec (73)
    on left: 19 20, on right: 11 90 101 105 120
dims (74)
    on left: 21 22, on right: 11 21 90 105
dim (75)
    on left: 23 24, on right: 21
enum_declaration (76)
    on left: 26, on right: 5
$@2 (77)
    on left: 25, on right: 26
enum_body (78)
    on left: 27, on right: 26
id_list (79)
    on left: 28 30, on right: 27 28
$@3 (80)
    on left: 29, on right: 30
initializer (81)
    on left: 31 32, on right: 28 30 112
init_value (82)
    on left: 33 34, on right: 31 70 71
expression (83)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53, on right: 33 35 36 37 38 39 40 41 42 43 62
variable (84)
    on left: 54 55 56 57 58, on right: 44 45 46 47 54 55 61 175
general_expression (85)
    on left: 59 60, on right: 48 49 51 54 56 59 63 148 149 152 154
    156 178
assignment (86)
    on left: 61 62, on right: 60 61
expression_list (87)
    on left: 63 64, on right: 47 69
constant (88)
    on left: 65 66 67 68, on right: 50 165 166 168 169
listexpression (89)
    on left: 69, on right: 53
init_values (90)
    on left: 70 71, on right: 34 70
class_declaration (91)
    on left: 73, on right: 6
$@4 (92)
    on left: 72, on right: 73
class_body (93)
    on left: 74, on right: 73
parent (94)
    on left: 75 76, on right: 74
members_methods (95)
    on left: 77 78, on right: 74 77
access (96)
    on left: 79 80 81 82, on right: 77 78
member_or_method (97)
    on left: 83 84, on right: 77 78
member (98)
    on left: 85 86, on right: 83
var_declaration (99)
    on left: 87, on right: 85 96
variabledefs (100)
    on left: 88 89, on right: 87 88 131 132
variabledef (101)
    on left: 90, on right: 88 89 112 124
anonymous_union (102)
    on left: 92, on right: 86
$@5 (103)
    on left: 91, on right: 92
union_body (104)
    on left: 93, on right: 92 108
fields (105)
    on left: 94 95, on right: 93 94
field (106)
    on left: 96, on right: 94 95
method (107)
    on left: 97, on right: 84
short_func_declaration (108)
    on left: 98 99, on right: 97 113
short_par_func_header (109)
    on left: 100, on right: 98
func_header_start (110)
    on left: 101, on right: 100 106 119
parameter_types (111)
    on left: 102 103, on right: 100 102
pass_list_dims (112)
    on left: 104 105, on right: 102 103
nopar_func_header (113)
    on left: 106, on right: 99 117
union_declaration (114)
    on left: 108, on right: 7
$@6 (115)
    on left: 107, on right: 108
global_var_declaration (116)
    on left: 109, on right: 8
init_variabledefs (117)
    on left: 110 111, on right: 109 110
init_variabledef (118)
    on left: 112, on right: 110 111
func_declaration (119)
    on left: 113 114, on right: 9
full_func_declaration (120)
    on left: 115 116 117, on right: 114
full_par_func_header (121)
    on left: 118 119, on right: 115
class_func_header_start (122)
    on left: 120, on right: 118 126
func_class (123)
    on left: 121, on right: 120
parameter_list (124)
    on left: 122 123, on right: 118 119 122
pass_variabledef (125)
    on left: 124 125, on right: 122 123
nopar_class_func_header (126)
    on left: 126, on right: 116
decl_statements (127)
    on left: 127 128 129 130, on right: 115 116 117 179 180
declarations (128)
    on left: 131 132, on right: 127 128 131 159 160
decltype (129)
    on left: 133 134, on right: 57 131 132
statements (130)
    on left: 135 136, on right: 127 129 135 166 167
statement (131)
    on left: 137 138 139 140 141 142 143 144 145 146 147, on right:
    135 136 149 150 152 153 169
expression_statement (132)
    on left: 148, on right: 137
if_statement (133)
    on left: 149, on right: 138
if_tail (134)
    on left: 150 151, on right: 149
while_statement (135)
    on left: 152, on right: 139
for_statement (136)
    on left: 153, on right: 140
optexpr (137)
    on left: 154 155, on right: 153 170
switch_statement (138)
    on left: 156, on right: 141
switch_tail (139)
    on left: 157 158, on right: 156
decl_cases (140)
    on left: 159 160 161 162, on right: 157
casestatements (141)
    on left: 163 164, on right: 159 161 163
casestatement (142)
    on left: 165 166 167, on right: 163 164 165
single_casestatement (143)
    on left: 168 169, on right: 158 168
return_statement (144)
    on left: 170, on right: 142
io_statement (145)
    on left: 171 172, on right: 143
in_list (146)
    on left: 173 174, on right: 171 173
in_item (147)
    on left: 175, on right: 173 174
out_list (148)
    on left: 176 177, on right: 172 176
out_item (149)
    on left: 178, on right: 176 177
comp_statement (150)
    on left: 179, on right: 144
main_function (151)
    on left: 180, on right: 1
main_header (152)
    on left: 181, on right: 180


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 3 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: global_declarations . main_function
    2 global_declarations: global_declarations . global_declaration

    T_TYPEDEF  shift, and go to state 4
    T_CHAR     shift, and go to state 5
    T_STRING   shift, and go to state 6
    T_INT      shift, and go to state 7
    T_ENUM     shift, and go to state 8
    T_CLASS    shift, and go to state 9
    T_UNION    shift, and go to state 10
    T_ID       shift, and go to state 11
    T_FLOAT    shift, and go to state 12
    T_VOID     shift, and go to state 13

    global_declaration       go to state 14
    typedef_declaration      go to state 15
    typename                 go to state 16
    standard_type            go to state 17
    enum_declaration         go to state 18
    class_declaration        go to state 19
    short_func_declaration   go to state 20
    short_par_func_header    go to state 21
    func_header_start        go to state 22
    nopar_func_header        go to state 23
    union_declaration        go to state 24
    global_var_declaration   go to state 25
    func_declaration         go to state 26
    full_func_declaration    go to state 27
    full_par_func_header     go to state 28
    class_func_header_start  go to state 29
    nopar_class_func_header  go to state 30
    main_function            go to state 31
    main_header              go to state 32


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

   11 typedef_declaration: T_TYPEDEF . typename listspec T_ID $@1 dims T_SEMI

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename       go to state 34
    standard_type  go to state 17


State 5

   14 standard_type: T_CHAR .

    $default  reduce using rule 14 (standard_type)


State 6

   17 standard_type: T_STRING .

    $default  reduce using rule 17 (standard_type)


State 7

   15 standard_type: T_INT .
  181 main_header: T_INT . T_MAIN T_LPAREN T_RPAREN

    T_MAIN  shift, and go to state 35

    $default  reduce using rule 15 (standard_type)


State 8

   26 enum_declaration: T_ENUM . T_ID $@2 enum_body T_SEMI

    T_ID  shift, and go to state 36


State 9

   73 class_declaration: T_CLASS . T_ID $@4 class_body T_SEMI

    T_ID  shift, and go to state 37


State 10

  108 union_declaration: T_UNION . T_ID $@6 union_body T_SEMI

    T_ID  shift, and go to state 38


State 11

   13 typename: T_ID .

    $default  reduce using rule 13 (typename)


State 12

   16 standard_type: T_FLOAT .

    $default  reduce using rule 16 (standard_type)


State 13

   18 standard_type: T_VOID .

    $default  reduce using rule 18 (standard_type)


State 14

    2 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 2 (global_declarations)


State 15

    4 global_declaration: typedef_declaration .

    $default  reduce using rule 4 (global_declaration)


State 16

  101 func_header_start: typename . listspec T_ID
  109 global_var_declaration: typename . init_variabledefs T_SEMI
  120 class_func_header_start: typename . listspec func_class T_ID

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec           go to state 40
    variabledef        go to state 41
    init_variabledefs  go to state 42
    init_variabledef   go to state 43


State 17

   12 typename: standard_type .

    $default  reduce using rule 12 (typename)


State 18

    5 global_declaration: enum_declaration .

    $default  reduce using rule 5 (global_declaration)


State 19

    6 global_declaration: class_declaration .

    $default  reduce using rule 6 (global_declaration)


State 20

  113 func_declaration: short_func_declaration .

    $default  reduce using rule 113 (func_declaration)


State 21

   98 short_func_declaration: short_par_func_header . T_SEMI

    T_SEMI  shift, and go to state 44


State 22

  100 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
  106 nopar_func_header: func_header_start . T_LPAREN T_RPAREN
  119 full_par_func_header: func_header_start . T_LPAREN parameter_list T_RPAREN

    T_LPAREN  shift, and go to state 45


State 23

   99 short_func_declaration: nopar_func_header . T_SEMI
  117 full_func_declaration: nopar_func_header . T_LBRACE decl_statements T_RBRACE

    T_SEMI    shift, and go to state 46
    T_LBRACE  shift, and go to state 47


State 24

    7 global_declaration: union_declaration .

    $default  reduce using rule 7 (global_declaration)


State 25

    8 global_declaration: global_var_declaration .

    $default  reduce using rule 8 (global_declaration)


State 26

    9 global_declaration: func_declaration .

    $default  reduce using rule 9 (global_declaration)


State 27

  114 func_declaration: full_func_declaration .

    $default  reduce using rule 114 (func_declaration)


State 28

  115 full_func_declaration: full_par_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 48


State 29

  118 full_par_func_header: class_func_header_start . T_LPAREN parameter_list T_RPAREN
  126 nopar_class_func_header: class_func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 49


State 30

  116 full_func_declaration: nopar_class_func_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 50


State 31

    1 program: global_declarations main_function .

    $default  reduce using rule 1 (program)


State 32

  180 main_function: main_header . T_LBRACE decl_statements T_RBRACE

    T_LBRACE  shift, and go to state 51


State 33

   15 standard_type: T_INT .

    $default  reduce using rule 15 (standard_type)


State 34

   11 typedef_declaration: T_TYPEDEF typename . listspec T_ID $@1 dims T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec  go to state 52


State 35

  181 main_header: T_INT T_MAIN . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 53


State 36

   26 enum_declaration: T_ENUM T_ID . $@2 enum_body T_SEMI

    $default  reduce using rule 25 ($@2)

    $@2  go to state 54


State 37

   73 class_declaration: T_CLASS T_ID . $@4 class_body T_SEMI

    $default  reduce using rule 72 ($@4)

    $@4  go to state 55


State 38

  108 union_declaration: T_UNION T_ID . $@6 union_body T_SEMI

    $default  reduce using rule 107 ($@6)

    $@6  go to state 56


State 39

   19 listspec: T_LIST .

    $default  reduce using rule 19 (listspec)


State 40

   90 variabledef: listspec . T_ID dims
  101 func_header_start: typename listspec . T_ID
  120 class_func_header_start: typename listspec . func_class T_ID

    T_ID  shift, and go to state 57

    func_class  go to state 58


State 41

  112 init_variabledef: variabledef . initializer

    T_ASSIGN  shift, and go to state 59

    $default  reduce using rule 32 (initializer)

    initializer  go to state 60


State 42

  109 global_var_declaration: typename init_variabledefs . T_SEMI
  110 init_variabledefs: init_variabledefs . T_COMMA init_variabledef

    T_SEMI   shift, and go to state 61
    T_COMMA  shift, and go to state 62


State 43

  111 init_variabledefs: init_variabledef .

    $default  reduce using rule 111 (init_variabledefs)


State 44

   98 short_func_declaration: short_par_func_header T_SEMI .

    $default  reduce using rule 98 (short_func_declaration)


State 45

  100 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
  106 nopar_func_header: func_header_start T_LPAREN . T_RPAREN
  119 full_par_func_header: func_header_start T_LPAREN . parameter_list T_RPAREN

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_RPAREN  shift, and go to state 63
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename         go to state 64
    standard_type    go to state 17
    parameter_types  go to state 65
    parameter_list   go to state 66


State 46

   99 short_func_declaration: nopar_func_header T_SEMI .

    $default  reduce using rule 99 (short_func_declaration)


State 47

  117 full_func_declaration: nopar_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_RBRACE  reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decl_statements       go to state 99
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 48

  115 full_func_declaration: full_par_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_RBRACE  reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decl_statements       go to state 112
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 49

  118 full_par_func_header: class_func_header_start T_LPAREN . parameter_list T_RPAREN
  126 nopar_class_func_header: class_func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_RPAREN  shift, and go to state 113
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename        go to state 114
    standard_type   go to state 17
    parameter_list  go to state 115


State 50

  116 full_func_declaration: nopar_class_func_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_RBRACE  reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decl_statements       go to state 116
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 51

  180 main_function: main_header T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_RBRACE  reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decl_statements       go to state 117
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 52

   11 typedef_declaration: T_TYPEDEF typename listspec . T_ID $@1 dims T_SEMI

    T_ID  shift, and go to state 118


State 53

  181 main_header: T_INT T_MAIN T_LPAREN . T_RPAREN

    T_RPAREN  shift, and go to state 119


State 54

   26 enum_declaration: T_ENUM T_ID $@2 . enum_body T_SEMI

    T_LBRACE  shift, and go to state 120

    enum_body  go to state 121


State 55

   73 class_declaration: T_CLASS T_ID $@4 . class_body T_SEMI

    T_COLON  shift, and go to state 122

    $default  reduce using rule 76 (parent)

    class_body  go to state 123
    parent      go to state 124


State 56

  108 union_declaration: T_UNION T_ID $@6 . union_body T_SEMI

    T_LBRACE  shift, and go to state 125

    union_body  go to state 126


State 57

   90 variabledef: listspec T_ID . dims
  101 func_header_start: typename listspec T_ID .
  121 func_class: T_ID . T_METH

    T_METH  shift, and go to state 127

    T_LPAREN  reduce using rule 101 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 128


State 58

  120 class_func_header_start: typename listspec func_class . T_ID

    T_ID  shift, and go to state 129


State 59

   31 initializer: T_ASSIGN . init_value

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 130
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    init_value      go to state 131
    expression      go to state 132
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 60

  112 init_variabledef: variabledef initializer .

    $default  reduce using rule 112 (init_variabledef)


State 61

  109 global_var_declaration: typename init_variabledefs T_SEMI .

    $default  reduce using rule 109 (global_var_declaration)


State 62

  110 init_variabledefs: init_variabledefs T_COMMA . init_variabledef

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec          go to state 135
    variabledef       go to state 41
    init_variabledef  go to state 136


State 63

  106 nopar_func_header: func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 106 (nopar_func_header)


State 64

  103 parameter_types: typename . pass_list_dims
  123 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 137

    $default  reduce using rule 20 (listspec)

    listspec          go to state 138
    variabledef       go to state 139
    pass_list_dims    go to state 140
    pass_variabledef  go to state 141


State 65

  100 short_par_func_header: func_header_start T_LPAREN parameter_types . T_RPAREN
  102 parameter_types: parameter_types . T_COMMA typename pass_list_dims

    T_RPAREN  shift, and go to state 142
    T_COMMA   shift, and go to state 143


State 66

  119 full_par_func_header: func_header_start T_LPAREN parameter_list . T_RPAREN
  122 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 144
    T_COMMA   shift, and go to state 145


State 67

   66 constant: T_ICONST .

    $default  reduce using rule 66 (constant)


State 68

   67 constant: T_FCONST .

    $default  reduce using rule 67 (constant)


State 69

   68 constant: T_SCONST .

    $default  reduce using rule 68 (constant)


State 70

   48 expression: T_LENGTH . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 146


State 71

  133 decltype: T_STATIC .

    $default  reduce using rule 133 (decltype)


State 72

  145 statement: T_CONTINUE . T_SEMI

    T_SEMI  shift, and go to state 147


State 73

  146 statement: T_BREAK . T_SEMI

    T_SEMI  shift, and go to state 148


State 74

  149 if_statement: T_IF . T_LPAREN general_expression T_RPAREN statement if_tail

    T_LPAREN  shift, and go to state 149


State 75

  152 while_statement: T_WHILE . T_LPAREN general_expression T_RPAREN statement

    T_LPAREN  shift, and go to state 150


State 76

  153 for_statement: T_FOR . T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_LPAREN  shift, and go to state 151


State 77

  156 switch_statement: T_SWITCH . T_LPAREN general_expression T_RPAREN switch_tail

    T_LPAREN  shift, and go to state 152


State 78

  170 return_statement: T_RETURN . optexpr T_SEMI

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_SEMI    reduce using rule 155 (optexpr)
    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 153
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134
    optexpr             go to state 154


State 79

   49 expression: T_NEW . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 155


State 80

  171 io_statement: T_CIN . T_INP in_list T_SEMI

    T_INP  shift, and go to state 156


State 81

  172 io_statement: T_COUT . T_OUT out_list T_SEMI

    T_OUT  shift, and go to state 157


State 82

   58 variable: T_THIS .

    $default  reduce using rule 58 (variable)


State 83

   42 expression: T_ADDOP . expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 158
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 84

   44 expression: T_INCDEC . variable

    T_STATIC    shift, and go to state 71
    T_THIS      shift, and go to state 82
    T_LISTFUNC  shift, and go to state 86

    $default  reduce using rule 134 (decltype)

    variable  go to state 159
    decltype  go to state 134


State 85

   43 expression: T_SIZEOP . expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 160
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 86

   56 variable: T_LISTFUNC . T_LPAREN general_expression T_RPAREN

    T_LPAREN  shift, and go to state 161


State 87

   51 expression: T_LPAREN . general_expression T_RPAREN
   52           | T_LPAREN . standard_type T_RPAREN

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_CHAR      shift, and go to state 5
    T_STRING    shift, and go to state 6
    T_SCONST    shift, and go to state 69
    T_INT       shift, and go to state 33
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_FLOAT     shift, and go to state 12
    T_NOTOP     shift, and go to state 92
    T_VOID      shift, and go to state 13

    $default  reduce using rule 134 (decltype)

    standard_type       go to state 162
    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 163
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 88

  147 statement: T_SEMI .

    $default  reduce using rule 147 (statement)


State 89

   69 listexpression: T_LBRACK . expression_list "]"

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_ID      reduce using rule 134 (decltype)
    $default  reduce using rule 64 (expression_list)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 164
    assignment          go to state 96
    expression_list     go to state 165
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 90

  179 comp_statement: T_LBRACE . decl_statements T_RBRACE

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_RBRACE  reduce using rule 130 (decl_statements)
    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decl_statements       go to state 166
    declarations          go to state 100
    decltype              go to state 101
    statements            go to state 102
    statement             go to state 103
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 91

   65 constant: T_CCONST .

    $default  reduce using rule 65 (constant)


State 92

   41 expression: T_NOTOP . expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 167
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 93

   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression
   62 assignment: expression .

    T_OROP   shift, and go to state 168
    T_ANDOP  shift, and go to state 169
    T_EQUOP  shift, and go to state 170
    T_ADDOP  shift, and go to state 171
    T_MULOP  shift, and go to state 172
    T_RELOP  shift, and go to state 173

    $default  reduce using rule 62 (assignment)


State 94

   45 expression: variable . T_INCDEC
   46           | variable .
   47           | variable . T_LPAREN expression_list T_RPAREN
   54 variable: variable . T_LBRACK general_expression "]"
   55         | variable . T_DOT T_ID
   61 assignment: variable . T_ASSIGN assignment

    T_INCDEC  shift, and go to state 174
    T_LPAREN  shift, and go to state 175
    T_DOT     shift, and go to state 176
    T_LBRACK  shift, and go to state 177
    T_ASSIGN  shift, and go to state 178

    $default  reduce using rule 46 (expression)


State 95

   59 general_expression: general_expression . T_COMMA general_expression
  148 expression_statement: general_expression . T_SEMI

    T_SEMI   shift, and go to state 179
    T_COMMA  shift, and go to state 180


State 96

   60 general_expression: assignment .

    $default  reduce using rule 60 (general_expression)


State 97

   50 expression: constant .

    $default  reduce using rule 50 (expression)


State 98

   53 expression: listexpression .

    $default  reduce using rule 53 (expression)


State 99

  117 full_func_declaration: nopar_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 181


State 100

  127 decl_statements: declarations . statements
  128                | declarations .
  131 declarations: declarations . decltype typename variabledefs T_SEMI

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_RBRACE  reduce using rule 128 (decl_statements)
    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 182
    statements            go to state 183
    statement             go to state 103
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 101

   57 variable: decltype . T_ID
  132 declarations: decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 184
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename       go to state 185
    standard_type  go to state 17


State 102

  129 decl_statements: statements .
  135 statements: statements . statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_ID      reduce using rule 134 (decltype)
    $default  reduce using rule 129 (decl_statements)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statement             go to state 186
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 103

  136 statements: statement .

    $default  reduce using rule 136 (statements)


State 104

  137 statement: expression_statement .

    $default  reduce using rule 137 (statement)


State 105

  138 statement: if_statement .

    $default  reduce using rule 138 (statement)


State 106

  139 statement: while_statement .

    $default  reduce using rule 139 (statement)


State 107

  140 statement: for_statement .

    $default  reduce using rule 140 (statement)


State 108

  141 statement: switch_statement .

    $default  reduce using rule 141 (statement)


State 109

  142 statement: return_statement .

    $default  reduce using rule 142 (statement)


State 110

  143 statement: io_statement .

    $default  reduce using rule 143 (statement)


State 111

  144 statement: comp_statement .

    $default  reduce using rule 144 (statement)


State 112

  115 full_func_declaration: full_par_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 187


State 113

  126 nopar_class_func_header: class_func_header_start T_LPAREN T_RPAREN .

    $default  reduce using rule 126 (nopar_class_func_header)


State 114

  123 parameter_list: typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 188

    $default  reduce using rule 20 (listspec)

    listspec          go to state 135
    variabledef       go to state 139
    pass_variabledef  go to state 141


State 115

  118 full_par_func_header: class_func_header_start T_LPAREN parameter_list . T_RPAREN
  122 parameter_list: parameter_list . T_COMMA typename pass_variabledef

    T_RPAREN  shift, and go to state 189
    T_COMMA   shift, and go to state 145


State 116

  116 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 190


State 117

  180 main_function: main_header T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 191


State 118

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID . $@1 dims T_SEMI

    $default  reduce using rule 10 ($@1)

    $@1  go to state 192


State 119

  181 main_header: T_INT T_MAIN T_LPAREN T_RPAREN .

    $default  reduce using rule 181 (main_header)


State 120

   27 enum_body: T_LBRACE . id_list T_RBRACE

    T_ID  shift, and go to state 193

    id_list  go to state 194


State 121

   26 enum_declaration: T_ENUM T_ID $@2 enum_body . T_SEMI

    T_SEMI  shift, and go to state 195


State 122

   75 parent: T_COLON . T_ID

    T_ID  shift, and go to state 196


State 123

   73 class_declaration: T_CLASS T_ID $@4 class_body . T_SEMI

    T_SEMI  shift, and go to state 197


State 124

   74 class_body: parent . T_LBRACE members_methods T_RBRACE

    T_LBRACE  shift, and go to state 198


State 125

   93 union_body: T_LBRACE . fields T_RBRACE

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename         go to state 199
    standard_type    go to state 17
    var_declaration  go to state 200
    fields           go to state 201
    field            go to state 202


State 126

  108 union_declaration: T_UNION T_ID $@6 union_body . T_SEMI

    T_SEMI  shift, and go to state 203


State 127

  121 func_class: T_ID T_METH .

    $default  reduce using rule 121 (func_class)


State 128

   21 dims: dims . dim
   90 variabledef: listspec T_ID dims .

    T_LBRACK  shift, and go to state 204

    $default  reduce using rule 90 (variabledef)

    dim  go to state 205


State 129

  120 class_func_header_start: typename listspec func_class T_ID .

    $default  reduce using rule 120 (class_func_header_start)


State 130

   34 init_value: T_LBRACE . init_values T_RBRACE

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 130
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    init_value      go to state 206
    expression      go to state 132
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    init_values     go to state 207
    decltype        go to state 134


State 131

   31 initializer: T_ASSIGN init_value .

    $default  reduce using rule 31 (initializer)


State 132

   33 init_value: expression .
   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression

    T_OROP   shift, and go to state 168
    T_ANDOP  shift, and go to state 169
    T_EQUOP  shift, and go to state 170
    T_ADDOP  shift, and go to state 171
    T_MULOP  shift, and go to state 172
    T_RELOP  shift, and go to state 173

    $default  reduce using rule 33 (init_value)


State 133

   45 expression: variable . T_INCDEC
   46           | variable .
   47           | variable . T_LPAREN expression_list T_RPAREN
   54 variable: variable . T_LBRACK general_expression "]"
   55         | variable . T_DOT T_ID

    T_INCDEC  shift, and go to state 174
    T_LPAREN  shift, and go to state 175
    T_DOT     shift, and go to state 176
    T_LBRACK  shift, and go to state 177

    $default  reduce using rule 46 (expression)


State 134

   57 variable: decltype . T_ID

    T_ID  shift, and go to state 208


State 135

   90 variabledef: listspec . T_ID dims

    T_ID  shift, and go to state 209


State 136

  110 init_variabledefs: init_variabledefs T_COMMA init_variabledef .

    $default  reduce using rule 110 (init_variabledefs)


State 137

  104 pass_list_dims: T_REFER .
  125 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 210

    $default  reduce using rule 104 (pass_list_dims)


State 138

   90 variabledef: listspec . T_ID dims
  105 pass_list_dims: listspec . dims

    T_ID  shift, and go to state 209

    $default  reduce using rule 22 (dims)

    dims  go to state 211


State 139

  124 pass_variabledef: variabledef .

    $default  reduce using rule 124 (pass_variabledef)


State 140

  103 parameter_types: typename pass_list_dims .

    $default  reduce using rule 103 (parameter_types)


State 141

  123 parameter_list: typename pass_variabledef .

    $default  reduce using rule 123 (parameter_list)


State 142

  100 short_par_func_header: func_header_start T_LPAREN parameter_types T_RPAREN .

    $default  reduce using rule 100 (short_par_func_header)


State 143

  102 parameter_types: parameter_types T_COMMA . typename pass_list_dims

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename       go to state 212
    standard_type  go to state 17


State 144

  119 full_par_func_header: func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 119 (full_par_func_header)


State 145

  122 parameter_list: parameter_list T_COMMA . typename pass_variabledef

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename       go to state 213
    standard_type  go to state 17


State 146

   48 expression: T_LENGTH T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 214
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 147

  145 statement: T_CONTINUE T_SEMI .

    $default  reduce using rule 145 (statement)


State 148

  146 statement: T_BREAK T_SEMI .

    $default  reduce using rule 146 (statement)


State 149

  149 if_statement: T_IF T_LPAREN . general_expression T_RPAREN statement if_tail

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 215
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 150

  152 while_statement: T_WHILE T_LPAREN . general_expression T_RPAREN statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 216
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 151

  153 for_statement: T_FOR T_LPAREN . optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_SEMI    reduce using rule 155 (optexpr)
    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 153
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134
    optexpr             go to state 217


State 152

  156 switch_statement: T_SWITCH T_LPAREN . general_expression T_RPAREN switch_tail

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 218
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 153

   59 general_expression: general_expression . T_COMMA general_expression
  154 optexpr: general_expression .

    T_COMMA  shift, and go to state 180

    $default  reduce using rule 154 (optexpr)


State 154

  170 return_statement: T_RETURN optexpr . T_SEMI

    T_SEMI  shift, and go to state 219


State 155

   49 expression: T_NEW T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 220
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 156

  171 io_statement: T_CIN T_INP . in_list T_SEMI

    T_STATIC    shift, and go to state 71
    T_THIS      shift, and go to state 82
    T_LISTFUNC  shift, and go to state 86

    $default  reduce using rule 134 (decltype)

    variable  go to state 221
    decltype  go to state 134
    in_list   go to state 222
    in_item   go to state 223


State 157

  172 io_statement: T_COUT T_OUT . out_list T_SEMI

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 224
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134
    out_list            go to state 225
    out_item            go to state 226


State 158

   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression
   42           | T_ADDOP expression .

    $default  reduce using rule 42 (expression)


State 159

   44 expression: T_INCDEC variable .
   54 variable: variable . T_LBRACK general_expression "]"
   55         | variable . T_DOT T_ID

    T_DOT     shift, and go to state 176
    T_LBRACK  shift, and go to state 177

    $default  reduce using rule 44 (expression)


State 160

   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression
   43           | T_SIZEOP expression .

    $default  reduce using rule 43 (expression)


State 161

   56 variable: T_LISTFUNC T_LPAREN . general_expression T_RPAREN

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 227
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 162

   52 expression: T_LPAREN standard_type . T_RPAREN

    T_RPAREN  shift, and go to state 228


State 163

   51 expression: T_LPAREN general_expression . T_RPAREN
   59 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 229
    T_COMMA   shift, and go to state 180


State 164

   59 general_expression: general_expression . T_COMMA general_expression
   63 expression_list: general_expression .

    T_COMMA  shift, and go to state 180

    $default  reduce using rule 63 (expression_list)


State 165

   69 listexpression: T_LBRACK expression_list . "]"

    "]"  shift, and go to state 230


State 166

  179 comp_statement: T_LBRACE decl_statements . T_RBRACE

    T_RBRACE  shift, and go to state 231


State 167

   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression
   41           | T_NOTOP expression .

    $default  reduce using rule 41 (expression)


State 168

   35 expression: expression T_OROP . expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 232
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 169

   36 expression: expression T_ANDOP . expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 233
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 170

   37 expression: expression T_EQUOP . expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 234
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 171

   39 expression: expression T_ADDOP . expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 235
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 172

   40 expression: expression T_MULOP . expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 236
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 173

   38 expression: expression T_RELOP . expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 237
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 174

   45 expression: variable T_INCDEC .

    $default  reduce using rule 45 (expression)


State 175

   47 expression: variable T_LPAREN . expression_list T_RPAREN

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_ID      reduce using rule 134 (decltype)
    $default  reduce using rule 64 (expression_list)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 164
    assignment          go to state 96
    expression_list     go to state 238
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 176

   55 variable: variable T_DOT . T_ID

    T_ID  shift, and go to state 239


State 177

   54 variable: variable T_LBRACK . general_expression "]"

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 240
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 178

   61 assignment: variable T_ASSIGN . assignment

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression      go to state 93
    variable        go to state 94
    assignment      go to state 241
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 179

  148 expression_statement: general_expression T_SEMI .

    $default  reduce using rule 148 (expression_statement)


State 180

   59 general_expression: general_expression T_COMMA . general_expression

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 242
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134


State 181

  117 full_func_declaration: nopar_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 117 (full_func_declaration)


State 182

   57 variable: decltype . T_ID
  131 declarations: declarations decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 184
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename       go to state 243
    standard_type  go to state 17


State 183

  127 decl_statements: declarations statements .
  135 statements: statements . statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_ID      reduce using rule 134 (decltype)
    $default  reduce using rule 127 (decl_statements)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statement             go to state 186
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 184

   13 typename: T_ID .
   57 variable: decltype T_ID .

    T_LIST    reduce using rule 13 (typename)
    T_ID      reduce using rule 13 (typename)
    $default  reduce using rule 57 (variable)


State 185

  132 declarations: decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 135
    variabledefs  go to state 244
    variabledef   go to state 245


State 186

  135 statements: statements statement .

    $default  reduce using rule 135 (statements)


State 187

  115 full_func_declaration: full_par_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 115 (full_func_declaration)


State 188

  125 pass_variabledef: T_REFER . T_ID

    T_ID  shift, and go to state 210


State 189

  118 full_par_func_header: class_func_header_start T_LPAREN parameter_list T_RPAREN .

    $default  reduce using rule 118 (full_par_func_header)


State 190

  116 full_func_declaration: nopar_class_func_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 116 (full_func_declaration)


State 191

  180 main_function: main_header T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 180 (main_function)


State 192

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 . dims T_SEMI

    $default  reduce using rule 22 (dims)

    dims  go to state 246


State 193

   30 id_list: T_ID . $@3 initializer

    $default  reduce using rule 29 ($@3)

    $@3  go to state 247


State 194

   27 enum_body: T_LBRACE id_list . T_RBRACE
   28 id_list: id_list . T_COMMA T_ID initializer

    T_COMMA   shift, and go to state 248
    T_RBRACE  shift, and go to state 249


State 195

   26 enum_declaration: T_ENUM T_ID $@2 enum_body T_SEMI .

    $default  reduce using rule 26 (enum_declaration)


State 196

   75 parent: T_COLON T_ID .

    $default  reduce using rule 75 (parent)


State 197

   73 class_declaration: T_CLASS T_ID $@4 class_body T_SEMI .

    $default  reduce using rule 73 (class_declaration)


State 198

   74 class_body: parent T_LBRACE . members_methods T_RBRACE

    T_PRIVATE    shift, and go to state 250
    T_PROTECTED  shift, and go to state 251
    T_PUBLIC     shift, and go to state 252

    $default  reduce using rule 82 (access)

    members_methods  go to state 253
    access           go to state 254


State 199

   87 var_declaration: typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 135
    variabledefs  go to state 255
    variabledef   go to state 245


State 200

   96 field: var_declaration .

    $default  reduce using rule 96 (field)


State 201

   93 union_body: T_LBRACE fields . T_RBRACE
   94 fields: fields . field

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_RBRACE  shift, and go to state 256
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename         go to state 199
    standard_type    go to state 17
    var_declaration  go to state 200
    field            go to state 257


State 202

   95 fields: field .

    $default  reduce using rule 95 (fields)


State 203

  108 union_declaration: T_UNION T_ID $@6 union_body T_SEMI .

    $default  reduce using rule 108 (union_declaration)


State 204

   23 dim: T_LBRACK . T_ICONST "]"
   24    | T_LBRACK . "]"

    T_ICONST  shift, and go to state 258
    "]"       shift, and go to state 259


State 205

   21 dims: dims dim .

    $default  reduce using rule 21 (dims)


State 206

   71 init_values: init_value .

    $default  reduce using rule 71 (init_values)


State 207

   34 init_value: T_LBRACE init_values . T_RBRACE
   70 init_values: init_values . T_COMMA init_value

    T_COMMA   shift, and go to state 260
    T_RBRACE  shift, and go to state 261


State 208

   57 variable: decltype T_ID .

    $default  reduce using rule 57 (variable)


State 209

   90 variabledef: listspec T_ID . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 128


State 210

  125 pass_variabledef: T_REFER T_ID .

    $default  reduce using rule 125 (pass_variabledef)


State 211

   21 dims: dims . dim
  105 pass_list_dims: listspec dims .

    T_LBRACK  shift, and go to state 204

    $default  reduce using rule 105 (pass_list_dims)

    dim  go to state 205


State 212

  102 parameter_types: parameter_types T_COMMA typename . pass_list_dims

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 262

    $default  reduce using rule 20 (listspec)

    listspec        go to state 263
    pass_list_dims  go to state 264


State 213

  122 parameter_list: parameter_list T_COMMA typename . pass_variabledef

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 188

    $default  reduce using rule 20 (listspec)

    listspec          go to state 135
    variabledef       go to state 139
    pass_variabledef  go to state 265


State 214

   48 expression: T_LENGTH T_LPAREN general_expression . T_RPAREN
   59 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 266
    T_COMMA   shift, and go to state 180


State 215

   59 general_expression: general_expression . T_COMMA general_expression
  149 if_statement: T_IF T_LPAREN general_expression . T_RPAREN statement if_tail

    T_RPAREN  shift, and go to state 267
    T_COMMA   shift, and go to state 180


State 216

   59 general_expression: general_expression . T_COMMA general_expression
  152 while_statement: T_WHILE T_LPAREN general_expression . T_RPAREN statement

    T_RPAREN  shift, and go to state 268
    T_COMMA   shift, and go to state 180


State 217

  153 for_statement: T_FOR T_LPAREN optexpr . T_SEMI optexpr T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 269


State 218

   59 general_expression: general_expression . T_COMMA general_expression
  156 switch_statement: T_SWITCH T_LPAREN general_expression . T_RPAREN switch_tail

    T_RPAREN  shift, and go to state 270
    T_COMMA   shift, and go to state 180


State 219

  170 return_statement: T_RETURN optexpr T_SEMI .

    $default  reduce using rule 170 (return_statement)


State 220

   49 expression: T_NEW T_LPAREN general_expression . T_RPAREN
   59 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 271
    T_COMMA   shift, and go to state 180


State 221

   54 variable: variable . T_LBRACK general_expression "]"
   55         | variable . T_DOT T_ID
  175 in_item: variable .

    T_DOT     shift, and go to state 176
    T_LBRACK  shift, and go to state 177

    $default  reduce using rule 175 (in_item)


State 222

  171 io_statement: T_CIN T_INP in_list . T_SEMI
  173 in_list: in_list . T_INP in_item

    T_SEMI  shift, and go to state 272
    T_INP   shift, and go to state 273


State 223

  174 in_list: in_item .

    $default  reduce using rule 174 (in_list)


State 224

   59 general_expression: general_expression . T_COMMA general_expression
  178 out_item: general_expression .

    T_COMMA  shift, and go to state 180

    $default  reduce using rule 178 (out_item)


State 225

  172 io_statement: T_COUT T_OUT out_list . T_SEMI
  176 out_list: out_list . T_OUT out_item

    T_SEMI  shift, and go to state 274
    T_OUT   shift, and go to state 275


State 226

  177 out_list: out_item .

    $default  reduce using rule 177 (out_list)


State 227

   56 variable: T_LISTFUNC T_LPAREN general_expression . T_RPAREN
   59 general_expression: general_expression . T_COMMA general_expression

    T_RPAREN  shift, and go to state 276
    T_COMMA   shift, and go to state 180


State 228

   52 expression: T_LPAREN standard_type T_RPAREN .

    $default  reduce using rule 52 (expression)


State 229

   51 expression: T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 51 (expression)


State 230

   69 listexpression: T_LBRACK expression_list "]" .

    $default  reduce using rule 69 (listexpression)


State 231

  179 comp_statement: T_LBRACE decl_statements T_RBRACE .

    $default  reduce using rule 179 (comp_statement)


State 232

   35 expression: expression . T_OROP expression
   35           | expression T_OROP expression .
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression

    T_ANDOP  shift, and go to state 169
    T_EQUOP  shift, and go to state 170
    T_ADDOP  shift, and go to state 171
    T_MULOP  shift, and go to state 172
    T_RELOP  shift, and go to state 173

    $default  reduce using rule 35 (expression)


State 233

   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   36           | expression T_ANDOP expression .
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression

    T_EQUOP  shift, and go to state 170
    T_ADDOP  shift, and go to state 171
    T_MULOP  shift, and go to state 172
    T_RELOP  shift, and go to state 173

    $default  reduce using rule 36 (expression)


State 234

   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   37           | expression T_EQUOP expression .
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression

    T_ADDOP  shift, and go to state 171
    T_MULOP  shift, and go to state 172
    T_RELOP  shift, and go to state 173

    $default  reduce using rule 37 (expression)


State 235

   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   39           | expression T_ADDOP expression .
   40           | expression . T_MULOP expression

    T_MULOP  shift, and go to state 172

    $default  reduce using rule 39 (expression)


State 236

   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression
   40           | expression T_MULOP expression .

    $default  reduce using rule 40 (expression)


State 237

   35 expression: expression . T_OROP expression
   36           | expression . T_ANDOP expression
   37           | expression . T_EQUOP expression
   38           | expression . T_RELOP expression
   38           | expression T_RELOP expression .
   39           | expression . T_ADDOP expression
   40           | expression . T_MULOP expression

    T_ADDOP  shift, and go to state 171
    T_MULOP  shift, and go to state 172

    $default  reduce using rule 38 (expression)


State 238

   47 expression: variable T_LPAREN expression_list . T_RPAREN

    T_RPAREN  shift, and go to state 277


State 239

   55 variable: variable T_DOT T_ID .

    $default  reduce using rule 55 (variable)


State 240

   54 variable: variable T_LBRACK general_expression . "]"
   59 general_expression: general_expression . T_COMMA general_expression

    T_COMMA  shift, and go to state 180
    "]"      shift, and go to state 278


State 241

   61 assignment: variable T_ASSIGN assignment .

    $default  reduce using rule 61 (assignment)


State 242

   59 general_expression: general_expression . T_COMMA general_expression
   59                   | general_expression T_COMMA general_expression .

    $default  reduce using rule 59 (general_expression)


State 243

  131 declarations: declarations decltype typename . variabledefs T_SEMI

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 135
    variabledefs  go to state 279
    variabledef   go to state 245


State 244

   88 variabledefs: variabledefs . T_COMMA variabledef
  132 declarations: decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 280
    T_COMMA  shift, and go to state 281


State 245

   89 variabledefs: variabledef .

    $default  reduce using rule 89 (variabledefs)


State 246

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims . T_SEMI
   21 dims: dims . dim

    T_SEMI    shift, and go to state 282
    T_LBRACK  shift, and go to state 204

    dim  go to state 205


State 247

   30 id_list: T_ID $@3 . initializer

    T_ASSIGN  shift, and go to state 59

    $default  reduce using rule 32 (initializer)

    initializer  go to state 283


State 248

   28 id_list: id_list T_COMMA . T_ID initializer

    T_ID  shift, and go to state 284


State 249

   27 enum_body: T_LBRACE id_list T_RBRACE .

    $default  reduce using rule 27 (enum_body)


State 250

   79 access: T_PRIVATE . T_COLON

    T_COLON  shift, and go to state 285


State 251

   80 access: T_PROTECTED . T_COLON

    T_COLON  shift, and go to state 286


State 252

   81 access: T_PUBLIC . T_COLON

    T_COLON  shift, and go to state 287


State 253

   74 class_body: parent T_LBRACE members_methods . T_RBRACE
   77 members_methods: members_methods . access member_or_method

    T_PRIVATE    shift, and go to state 250
    T_PROTECTED  shift, and go to state 251
    T_PUBLIC     shift, and go to state 252
    T_RBRACE     shift, and go to state 288

    $default  reduce using rule 82 (access)

    access  go to state 289


State 254

   78 members_methods: access . member_or_method

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_UNION   shift, and go to state 290
    T_ID      shift, and go to state 11
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename                go to state 291
    standard_type           go to state 17
    member_or_method        go to state 292
    member                  go to state 293
    var_declaration         go to state 294
    anonymous_union         go to state 295
    method                  go to state 296
    short_func_declaration  go to state 297
    short_par_func_header   go to state 21
    func_header_start       go to state 298
    nopar_func_header       go to state 299


State 255

   87 var_declaration: typename variabledefs . T_SEMI
   88 variabledefs: variabledefs . T_COMMA variabledef

    T_SEMI   shift, and go to state 300
    T_COMMA  shift, and go to state 281


State 256

   93 union_body: T_LBRACE fields T_RBRACE .

    $default  reduce using rule 93 (union_body)


State 257

   94 fields: fields field .

    $default  reduce using rule 94 (fields)


State 258

   23 dim: T_LBRACK T_ICONST . "]"

    "]"  shift, and go to state 301


State 259

   24 dim: T_LBRACK "]" .

    $default  reduce using rule 24 (dim)


State 260

   70 init_values: init_values T_COMMA . init_value

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 130
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    init_value      go to state 302
    expression      go to state 132
    variable        go to state 133
    constant        go to state 97
    listexpression  go to state 98
    decltype        go to state 134


State 261

   34 init_value: T_LBRACE init_values T_RBRACE .

    $default  reduce using rule 34 (init_value)


State 262

  104 pass_list_dims: T_REFER .

    $default  reduce using rule 104 (pass_list_dims)


State 263

  105 pass_list_dims: listspec . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 211


State 264

  102 parameter_types: parameter_types T_COMMA typename pass_list_dims .

    $default  reduce using rule 102 (parameter_types)


State 265

  122 parameter_list: parameter_list T_COMMA typename pass_variabledef .

    $default  reduce using rule 122 (parameter_list)


State 266

   48 expression: T_LENGTH T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 48 (expression)


State 267

  149 if_statement: T_IF T_LPAREN general_expression T_RPAREN . statement if_tail

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statement             go to state 303
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 268

  152 while_statement: T_WHILE T_LPAREN general_expression T_RPAREN . statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statement             go to state 304
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 269

  153 for_statement: T_FOR T_LPAREN optexpr T_SEMI . optexpr T_SEMI optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_SEMI    reduce using rule 155 (optexpr)
    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 153
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134
    optexpr             go to state 305


State 270

  156 switch_statement: T_SWITCH T_LPAREN general_expression T_RPAREN . switch_tail

    T_LBRACE  shift, and go to state 306
    T_CASE    shift, and go to state 307

    switch_tail           go to state 308
    single_casestatement  go to state 309


State 271

   49 expression: T_NEW T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 49 (expression)


State 272

  171 io_statement: T_CIN T_INP in_list T_SEMI .

    $default  reduce using rule 171 (io_statement)


State 273

  173 in_list: in_list T_INP . in_item

    T_STATIC    shift, and go to state 71
    T_THIS      shift, and go to state 82
    T_LISTFUNC  shift, and go to state 86

    $default  reduce using rule 134 (decltype)

    variable  go to state 221
    decltype  go to state 134
    in_item   go to state 310


State 274

  172 io_statement: T_COUT T_OUT out_list T_SEMI .

    $default  reduce using rule 172 (io_statement)


State 275

  176 out_list: out_list T_OUT . out_item

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 224
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134
    out_item            go to state 311


State 276

   56 variable: T_LISTFUNC T_LPAREN general_expression T_RPAREN .

    $default  reduce using rule 56 (variable)


State 277

   47 expression: variable T_LPAREN expression_list T_RPAREN .

    $default  reduce using rule 47 (expression)


State 278

   54 variable: variable T_LBRACK general_expression "]" .

    $default  reduce using rule 54 (variable)


State 279

   88 variabledefs: variabledefs . T_COMMA variabledef
  131 declarations: declarations decltype typename variabledefs . T_SEMI

    T_SEMI   shift, and go to state 312
    T_COMMA  shift, and go to state 281


State 280

  132 declarations: decltype typename variabledefs T_SEMI .

    $default  reduce using rule 132 (declarations)


State 281

   88 variabledefs: variabledefs T_COMMA . variabledef

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec     go to state 135
    variabledef  go to state 313


State 282

   11 typedef_declaration: T_TYPEDEF typename listspec T_ID $@1 dims T_SEMI .

    $default  reduce using rule 11 (typedef_declaration)


State 283

   30 id_list: T_ID $@3 initializer .

    $default  reduce using rule 30 (id_list)


State 284

   28 id_list: id_list T_COMMA T_ID . initializer

    T_ASSIGN  shift, and go to state 59

    $default  reduce using rule 32 (initializer)

    initializer  go to state 314


State 285

   79 access: T_PRIVATE T_COLON .

    $default  reduce using rule 79 (access)


State 286

   80 access: T_PROTECTED T_COLON .

    $default  reduce using rule 80 (access)


State 287

   81 access: T_PUBLIC T_COLON .

    $default  reduce using rule 81 (access)


State 288

   74 class_body: parent T_LBRACE members_methods T_RBRACE .

    $default  reduce using rule 74 (class_body)


State 289

   77 members_methods: members_methods access . member_or_method

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_UNION   shift, and go to state 290
    T_ID      shift, and go to state 11
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename                go to state 291
    standard_type           go to state 17
    member_or_method        go to state 315
    member                  go to state 293
    var_declaration         go to state 294
    anonymous_union         go to state 295
    method                  go to state 296
    short_func_declaration  go to state 297
    short_par_func_header   go to state 21
    func_header_start       go to state 298
    nopar_func_header       go to state 299


State 290

   92 anonymous_union: T_UNION . $@5 union_body T_SEMI

    $default  reduce using rule 91 ($@5)

    $@5  go to state 316


State 291

   87 var_declaration: typename . variabledefs T_SEMI
  101 func_header_start: typename . listspec T_ID

    T_LIST  shift, and go to state 39

    $default  reduce using rule 20 (listspec)

    listspec      go to state 317
    variabledefs  go to state 255
    variabledef   go to state 245


State 292

   78 members_methods: access member_or_method .

    $default  reduce using rule 78 (members_methods)


State 293

   83 member_or_method: member .

    $default  reduce using rule 83 (member_or_method)


State 294

   85 member: var_declaration .

    $default  reduce using rule 85 (member)


State 295

   86 member: anonymous_union .

    $default  reduce using rule 86 (member)


State 296

   84 member_or_method: method .

    $default  reduce using rule 84 (member_or_method)


State 297

   97 method: short_func_declaration .

    $default  reduce using rule 97 (method)


State 298

  100 short_par_func_header: func_header_start . T_LPAREN parameter_types T_RPAREN
  106 nopar_func_header: func_header_start . T_LPAREN T_RPAREN

    T_LPAREN  shift, and go to state 318


State 299

   99 short_func_declaration: nopar_func_header . T_SEMI

    T_SEMI  shift, and go to state 46


State 300

   87 var_declaration: typename variabledefs T_SEMI .

    $default  reduce using rule 87 (var_declaration)


State 301

   23 dim: T_LBRACK T_ICONST "]" .

    $default  reduce using rule 23 (dim)


State 302

   70 init_values: init_values T_COMMA init_value .

    $default  reduce using rule 70 (init_values)


State 303

  149 if_statement: T_IF T_LPAREN general_expression T_RPAREN statement . if_tail

    T_ELSE  shift, and go to state 319

    $default  reduce using rule 151 (if_tail)

    if_tail  go to state 320


State 304

  152 while_statement: T_WHILE T_LPAREN general_expression T_RPAREN statement .

    $default  reduce using rule 152 (while_statement)


State 305

  153 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr . T_SEMI optexpr T_RPAREN statement

    T_SEMI  shift, and go to state 321


State 306

  157 switch_tail: T_LBRACE . decl_cases T_RBRACE

    T_STATIC   shift, and go to state 71
    T_DEFAULT  shift, and go to state 322
    T_CASE     shift, and go to state 323

    T_RBRACE  reduce using rule 162 (decl_cases)
    $default  reduce using rule 134 (decltype)

    declarations    go to state 324
    decltype        go to state 325
    decl_cases      go to state 326
    casestatements  go to state 327
    casestatement   go to state 328


State 307

  168 single_casestatement: T_CASE . constant T_COLON single_casestatement
  169                     | T_CASE . constant T_COLON statement

    T_ICONST  shift, and go to state 67
    T_FCONST  shift, and go to state 68
    T_SCONST  shift, and go to state 69
    T_CCONST  shift, and go to state 91

    constant  go to state 329


State 308

  156 switch_statement: T_SWITCH T_LPAREN general_expression T_RPAREN switch_tail .

    $default  reduce using rule 156 (switch_statement)


State 309

  158 switch_tail: single_casestatement .

    $default  reduce using rule 158 (switch_tail)


State 310

  173 in_list: in_list T_INP in_item .

    $default  reduce using rule 173 (in_list)


State 311

  176 out_list: out_list T_OUT out_item .

    $default  reduce using rule 176 (out_list)


State 312

  131 declarations: declarations decltype typename variabledefs T_SEMI .

    $default  reduce using rule 131 (declarations)


State 313

   88 variabledefs: variabledefs T_COMMA variabledef .

    $default  reduce using rule 88 (variabledefs)


State 314

   28 id_list: id_list T_COMMA T_ID initializer .

    $default  reduce using rule 28 (id_list)


State 315

   77 members_methods: members_methods access member_or_method .

    $default  reduce using rule 77 (members_methods)


State 316

   92 anonymous_union: T_UNION $@5 . union_body T_SEMI

    T_LBRACE  shift, and go to state 125

    union_body  go to state 330


State 317

   90 variabledef: listspec . T_ID dims
  101 func_header_start: typename listspec . T_ID

    T_ID  shift, and go to state 331


State 318

  100 short_par_func_header: func_header_start T_LPAREN . parameter_types T_RPAREN
  106 nopar_func_header: func_header_start T_LPAREN . T_RPAREN

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_RPAREN  shift, and go to state 63
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename         go to state 332
    standard_type    go to state 17
    parameter_types  go to state 65


State 319

  150 if_tail: T_ELSE . statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statement             go to state 333
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 320

  149 if_statement: T_IF T_LPAREN general_expression T_RPAREN statement if_tail .

    $default  reduce using rule 149 (if_statement)


State 321

  153 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI . optexpr T_RPAREN statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_NEW       shift, and go to state 79
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_LBRACK    shift, and go to state 89
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_RPAREN  reduce using rule 155 (optexpr)
    $default  reduce using rule 134 (decltype)

    expression          go to state 93
    variable            go to state 94
    general_expression  go to state 153
    assignment          go to state 96
    constant            go to state 97
    listexpression      go to state 98
    decltype            go to state 134
    optexpr             go to state 334


State 322

  167 casestatement: T_DEFAULT . T_COLON statements

    T_COLON  shift, and go to state 335


State 323

  165 casestatement: T_CASE . constant T_COLON casestatement
  166              | T_CASE . constant T_COLON statements

    T_ICONST  shift, and go to state 67
    T_FCONST  shift, and go to state 68
    T_SCONST  shift, and go to state 69
    T_CCONST  shift, and go to state 91

    constant  go to state 336


State 324

  131 declarations: declarations . decltype typename variabledefs T_SEMI
  159 decl_cases: declarations . casestatements
  160           | declarations .

    T_STATIC   shift, and go to state 71
    T_DEFAULT  shift, and go to state 322
    T_CASE     shift, and go to state 323

    T_RBRACE  reduce using rule 160 (decl_cases)
    $default  reduce using rule 134 (decltype)

    decltype        go to state 337
    casestatements  go to state 338
    casestatement   go to state 328


State 325

  132 declarations: decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename       go to state 185
    standard_type  go to state 17


State 326

  157 switch_tail: T_LBRACE decl_cases . T_RBRACE

    T_RBRACE  shift, and go to state 339


State 327

  161 decl_cases: casestatements .
  163 casestatements: casestatements . casestatement

    T_DEFAULT  shift, and go to state 322
    T_CASE     shift, and go to state 323

    $default  reduce using rule 161 (decl_cases)

    casestatement  go to state 340


State 328

  164 casestatements: casestatement .

    $default  reduce using rule 164 (casestatements)


State 329

  168 single_casestatement: T_CASE constant . T_COLON single_casestatement
  169                     | T_CASE constant . T_COLON statement

    T_COLON  shift, and go to state 341


State 330

   92 anonymous_union: T_UNION $@5 union_body . T_SEMI

    T_SEMI  shift, and go to state 342


State 331

   90 variabledef: listspec T_ID . dims
  101 func_header_start: typename listspec T_ID .

    T_LPAREN  reduce using rule 101 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 128


State 332

  103 parameter_types: typename . pass_list_dims

    T_LIST   shift, and go to state 39
    T_REFER  shift, and go to state 262

    $default  reduce using rule 20 (listspec)

    listspec        go to state 263
    pass_list_dims  go to state 140


State 333

  150 if_tail: T_ELSE statement .

    $default  reduce using rule 150 (if_tail)


State 334

  153 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr . T_RPAREN statement

    T_RPAREN  shift, and go to state 343


State 335

  167 casestatement: T_DEFAULT T_COLON . statements

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statements            go to state 344
    statement             go to state 103
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 336

  165 casestatement: T_CASE constant . T_COLON casestatement
  166              | T_CASE constant . T_COLON statements

    T_COLON  shift, and go to state 345


State 337

  131 declarations: declarations decltype . typename variabledefs T_SEMI

    T_CHAR    shift, and go to state 5
    T_STRING  shift, and go to state 6
    T_INT     shift, and go to state 33
    T_ID      shift, and go to state 11
    T_FLOAT   shift, and go to state 12
    T_VOID    shift, and go to state 13

    typename       go to state 243
    standard_type  go to state 17


State 338

  159 decl_cases: declarations casestatements .
  163 casestatements: casestatements . casestatement

    T_DEFAULT  shift, and go to state 322
    T_CASE     shift, and go to state 323

    $default  reduce using rule 159 (decl_cases)

    casestatement  go to state 340


State 339

  157 switch_tail: T_LBRACE decl_cases T_RBRACE .

    $default  reduce using rule 157 (switch_tail)


State 340

  163 casestatements: casestatements casestatement .

    $default  reduce using rule 163 (casestatements)


State 341

  168 single_casestatement: T_CASE constant T_COLON . single_casestatement
  169                     | T_CASE constant T_COLON . statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CASE      shift, and go to state 307
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statement             go to state 346
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    single_casestatement  go to state 347
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 342

   92 anonymous_union: T_UNION $@5 union_body T_SEMI .

    $default  reduce using rule 92 (anonymous_union)


State 343

  153 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN . statement

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statement             go to state 348
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 344

  135 statements: statements . statement
  167 casestatement: T_DEFAULT T_COLON statements .

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_ID      reduce using rule 134 (decltype)
    $default  reduce using rule 167 (casestatement)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statement             go to state 186
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 345

  165 casestatement: T_CASE constant T_COLON . casestatement
  166              | T_CASE constant T_COLON . statements

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_DEFAULT   shift, and go to state 322
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CASE      shift, and go to state 323
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    $default  reduce using rule 134 (decltype)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statements            go to state 349
    statement             go to state 103
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    casestatement         go to state 350
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 346

  169 single_casestatement: T_CASE constant T_COLON statement .

    $default  reduce using rule 169 (single_casestatement)


State 347

  168 single_casestatement: T_CASE constant T_COLON single_casestatement .

    $default  reduce using rule 168 (single_casestatement)


State 348

  153 for_statement: T_FOR T_LPAREN optexpr T_SEMI optexpr T_SEMI optexpr T_RPAREN statement .

    $default  reduce using rule 153 (for_statement)


State 349

  135 statements: statements . statement
  166 casestatement: T_CASE constant T_COLON statements .

    T_ICONST    shift, and go to state 67
    T_FCONST    shift, and go to state 68
    T_SCONST    shift, and go to state 69
    T_LENGTH    shift, and go to state 70
    T_STATIC    shift, and go to state 71
    T_CONTINUE  shift, and go to state 72
    T_BREAK     shift, and go to state 73
    T_IF        shift, and go to state 74
    T_WHILE     shift, and go to state 75
    T_FOR       shift, and go to state 76
    T_SWITCH    shift, and go to state 77
    T_RETURN    shift, and go to state 78
    T_NEW       shift, and go to state 79
    T_CIN       shift, and go to state 80
    T_COUT      shift, and go to state 81
    T_THIS      shift, and go to state 82
    T_ADDOP     shift, and go to state 83
    T_INCDEC    shift, and go to state 84
    T_SIZEOP    shift, and go to state 85
    T_LISTFUNC  shift, and go to state 86
    T_LPAREN    shift, and go to state 87
    T_SEMI      shift, and go to state 88
    T_LBRACK    shift, and go to state 89
    T_LBRACE    shift, and go to state 90
    T_CCONST    shift, and go to state 91
    T_NOTOP     shift, and go to state 92

    T_ID      reduce using rule 134 (decltype)
    $default  reduce using rule 166 (casestatement)

    expression            go to state 93
    variable              go to state 94
    general_expression    go to state 95
    assignment            go to state 96
    constant              go to state 97
    listexpression        go to state 98
    decltype              go to state 134
    statement             go to state 186
    expression_statement  go to state 104
    if_statement          go to state 105
    while_statement       go to state 106
    for_statement         go to state 107
    switch_statement      go to state 108
    return_statement      go to state 109
    io_statement          go to state 110
    comp_statement        go to state 111


State 350

  165 casestatement: T_CASE constant T_COLON casestatement .

    $default  reduce using rule 165 (casestatement)
