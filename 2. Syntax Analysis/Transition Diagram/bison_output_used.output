Grammar

    0 $accept: program "end of file"

    1 program: global_declarations main_function

    2 global_declarations: global_declarations global_declaration
    3                    | %empty

    4 global_declaration: typedef_declaration
    5                   | enum_declaration
    6                   | class_declaration
    7                   | union_declaration
    8                   | global_var_declaration
    9                   | func_declaration

   10 $@1: %empty

   11 typedef_declaration: "typedef" typename listspec "id" $@1 dims ";"

   12 typename: standard_type
   13         | "id"

   14 standard_type: "char"
   15              | "int"
   16              | "float"
   17              | "string"
   18              | "void"

   19 listspec: "list"
   20         | %empty

   21 dims: dims dim
   22     | %empty

   23 dim: "[" "integer constant" "]"
   24    | "[" "]"

   25 $@2: %empty

   26 $@3: %empty

   27 enum_declaration: "enum" "id" $@2 enum_body $@3 ";"

   28 enum_body: "{" id_list "}"

   29 id_list: id_list "," "id" initializer

   30 $@4: %empty

   31 id_list: "id" $@4 initializer

   32 initializer: "=" init_value
   33            | %empty

   34 init_value: expression
   35           | "{" init_values "}"

   36 expression: expression "||" expression
   37           | expression "&&" expression
   38           | expression "== or !=" expression
   39           | expression "> or >= or < or <=" expression
   40           | expression "+ or -" expression
   41           | expression "* or / or %" expression
   42           | "!" expression
   43           | "+ or -" expression
   44           | "sizeof" expression
   45           | "-- or ++" variable
   46           | variable "-- or ++"
   47           | variable
   48           | variable "(" expression_list ")"
   49           | "length" "(" general_expression ")"
   50           | "new" "(" general_expression ")"
   51           | constant
   52           | "(" general_expression ")"
   53           | "(" standard_type ")"
   54           | listexpression

   55 variable: variable "[" general_expression "]"
   56         | variable "." "id"
   57         | "listfunc" "(" general_expression ")"
   58         | decltype "id"
   59         | "this"

   60 general_expression: general_expression "," general_expression
   61                   | assignment

   62 assignment: variable "=" assignment
   63           | expression

   64 expression_list: general_expression
   65                | %empty

   66 constant: "char const"
   67         | "integer constant"
   68         | "float constant"
   69         | "string const"

   70 listexpression: "[" expression_list "]"

   71 init_values: init_values "," init_value
   72            | init_value

   73 $@5: %empty

   74 class_declaration: "class" "id" $@5 class_body ";"

   75 class_body: parent "{" members_methods "}"

   76 parent: ":" "id"
   77       | %empty

   78 members_methods: members_methods access member_or_method
   79                | access member_or_method

   80 access: "private" ":"
   81       | "protected" ":"
   82       | "public" ":"
   83       | %empty

   84 member_or_method: member
   85                 | method

   86 member: var_declaration
   87       | anonymous_union

   88 var_declaration: typename variabledefs ";"

   89 variabledefs: variabledefs "," variabledef
   90             | variabledef

   91 variabledef: listspec "id" dims

   92 $@6: %empty

   93 $@7: %empty

   94 anonymous_union: "union" $@6 union_body $@7 ";"

   95 union_body: "{" fields "}"

   96 fields: fields field
   97       | field

   98 field: var_declaration

   99 method: short_func_declaration

  100 short_func_declaration: short_par_func_header ";"
  101                       | nopar_func_header ";"

  102 short_par_func_header: func_header_start "(" parameter_types ")"

  103 func_header_start: typename listspec "id"

  104 parameter_types: parameter_types "," typename pass_list_dims
  105                | typename pass_list_dims

  106 pass_list_dims: "&"
  107               | listspec dims

  108 nopar_func_header: func_header_start "(" ")"

  109 $@8: %empty

  110 union_declaration: "union" "id" $@8 union_body ";"

  111 global_var_declaration: typename init_variabledefs ";"

  112 init_variabledefs: init_variabledefs "," init_variabledef
  113                  | init_variabledef

  114 init_variabledef: variabledef initializer

  115 func_declaration: short_func_declaration
  116                 | full_func_declaration

  117 full_func_declaration: full_par_func_header "{" decl_statements "}"
  118                      | nopar_class_func_header "{" decl_statements "}"
  119                      | nopar_func_header "{" decl_statements "}"

  120 full_par_func_header: class_func_header_start "(" parameter_list ")"
  121                     | func_header_start "(" parameter_list ")"

  122 class_func_header_start: typename listspec func_class "id"

  123 func_class: "id" "::"

  124 parameter_list: parameter_list "," typename pass_variabledef
  125               | typename pass_variabledef

  126 pass_variabledef: variabledef
  127                 | "&" "id"

  128 nopar_class_func_header: class_func_header_start "(" ")"

  129 decl_statements: declarations statements
  130                | declarations
  131                | statements
  132                | %empty

  133 declarations: declarations decltype typename variabledefs ";"
  134             | decltype typename variabledefs ";"

  135 decltype: "static"
  136         | %empty

  137 statements: statements statement
  138           | statement

  139 statement: expression_statement
  140          | if_statement
  141          | while_statement
  142          | for_statement
  143          | switch_statement
  144          | return_statement
  145          | io_statement
  146          | comp_statement
  147          | "continue" ";"
  148          | "break" ";"
  149          | ";"

  150 expression_statement: general_expression ";"

  151 $@9: %empty

  152 $@10: %empty

  153 if_statement: "if" "(" $@9 general_expression ")" statement $@10 if_tail

  154 $@11: %empty

  155 if_tail: "else" $@11 statement
  156        | %empty

  157 $@12: %empty

  158 while_statement: "while" "(" $@12 general_expression ")" statement
  159                | "while" error general_expression ")" statement

  160 $@13: %empty

  161 for_statement: "for" "(" $@13 optexpr ";" optexpr ";" optexpr ")" statement

  162 optexpr: general_expression
  163        | %empty

  164 $@14: %empty

  165 switch_statement: "switch" "(" $@14 general_expression ")" switch_tail

  166 switch_tail: "{" decl_cases "}"
  167            | single_casestatement

  168 decl_cases: declarations casestatements
  169           | declarations
  170           | casestatements
  171           | %empty

  172 casestatements: casestatements casestatement
  173               | casestatement

  174 casestatement: "case" constant ":" casestatement
  175              | "case" constant error casestatement

  176 $@15: %empty

  177 casestatement: "case" constant ":" $@15 statements
  178              | "case" constant error statements

  179 $@16: %empty

  180 casestatement: "default" ":" $@16 statements
  181              | "default" error statements

  182 single_casestatement: "case" constant ":" single_casestatement

  183 $@17: %empty

  184 single_casestatement: "case" constant ":" $@17 statement

  185 return_statement: "return" optexpr ";"

  186 io_statement: "cin" "<<" in_list ";"
  187             | "cin" "<<" in_list error
  188             | "cout" ">>" out_list ";"
  189             | "cout" ">>" out_list error

  190 in_list: in_list "<<" in_item
  191        | in_item

  192 in_item: variable

  193 out_list: out_list ">>" out_item
  194         | out_item

  195 out_item: general_expression

  196 comp_statement: "{" decl_statements "}"

  197 main_function: main_header "{" decl_statements "}"

  198 main_header: "int" "main" "(" ")"
  199            | error "main" "(" ")"
  200            | "int" error "(" ")"
  201            | "int" "main" error ")"
  202            | "int" "main" "(" error


Terminals, with rules where they appear

"end of file" (0) 0
error (256) 159 175 178 181 187 189 199 200 201 202
"integer constant" (258) 23 67
"float constant" (259) 68
"typedef" (260) 11
"char" (261) 14
"string" (262) 17
"string const" (263) 69
"class" (264) 74
"private" (265) 80
"protected" (266) 81
"public" (267) 82
"static" (268) 135
"union" (269) 94 110
"list" (270) 19
"continue" (271) 147
"break" (272) 148
"if" (273) 153
"else" (274) 155
"while" (275) 158 159
"for" (276) 161
"switch" (277) 165
"default" (278) 180 181
"return" (279) 185
"new" (280) 50
"cin" (281) 186 187
"cout" (282) 188 189
"main" (283) 198 199 201 202
"this" (284) 59
"id" (285) 11 13 27 29 31 56 58 74 76 91 103 110 122 123 127
"||" (286) 36
"&&" (287) 37
"== or !=" (288) 38
"+ or -" (289) 40 43
"* or / or %" (290) 41
"-- or ++" (291) 45 46
"sizeof" (292) 44
"listfunc" (293) 57
"(" (294) 48 49 50 52 53 57 102 108 120 121 128 153 158 161 165 198
    199 200 202
")" (295) 48 49 50 52 53 57 102 108 120 121 128 153 158 159 161 165
    198 199 200 201
";" (296) 11 27 74 88 94 100 101 110 111 133 134 147 148 149 150 161
    185 186 188
"." (297) 56
"," (298) 29 60 71 89 104 112 124
":" (299) 76 80 81 82 174 177 180 182 184
"[" (300) 23 24 55 70
"]" (301) 23 24 55 70
"&" (302) 106 127
"{" (303) 28 35 75 95 117 118 119 166 196 197
"}" (304) 28 35 75 95 117 118 119 166 196 197
"::" (305) 123
"<<" (306) 186 187 190
">>" (307) 188 189 193
"=" (308) 32 62
"case" (309) 174 175 177 178 182 184
"char const" (310) 66
"float" (311) 16
"!" (312) 42
"> or >= or < or <=" (313) 39
"void" (314) 18
"enum" (315) 27
"int" (316) 15 198 200 201 202
"length" (317) 49
UMINUS (318)
LOWER_THAN_ELSE (319)


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
program (66)
    on left: 1, on right: 0
global_declarations (67)
    on left: 2 3, on right: 1 2
global_declaration (68)
    on left: 4 5 6 7 8 9, on right: 2
typedef_declaration (69)
    on left: 11, on right: 4
$@1 (70)
    on left: 10, on right: 11
typename (71)
    on left: 12 13, on right: 11 88 103 104 105 111 122 124 125 133
    134
standard_type (72)
    on left: 14 15 16 17 18, on right: 12 53
listspec (73)
    on left: 19 20, on right: 11 91 103 107 122
dims (74)
    on left: 21 22, on right: 11 21 91 107
dim (75)
    on left: 23 24, on right: 21
enum_declaration (76)
    on left: 27, on right: 5
$@2 (77)
    on left: 25, on right: 27
$@3 (78)
    on left: 26, on right: 27
enum_body (79)
    on left: 28, on right: 27
id_list (80)
    on left: 29 31, on right: 28 29
$@4 (81)
    on left: 30, on right: 31
initializer (82)
    on left: 32 33, on right: 29 31 114
init_value (83)
    on left: 34 35, on right: 32 71 72
expression (84)
    on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
    54, on right: 34 36 37 38 39 40 41 42 43 44 63
variable (85)
    on left: 55 56 57 58 59, on right: 45 46 47 48 55 56 62 192
general_expression (86)
    on left: 60 61, on right: 49 50 52 55 57 60 64 150 153 158 159
    162 165 195
assignment (87)
    on left: 62 63, on right: 61 62
expression_list (88)
    on left: 64 65, on right: 48 70
constant (89)
    on left: 66 67 68 69, on right: 51 174 175 177 178 182 184
listexpression (90)
    on left: 70, on right: 54
init_values (91)
    on left: 71 72, on right: 35 71
class_declaration (92)
    on left: 74, on right: 6
$@5 (93)
    on left: 73, on right: 74
class_body (94)
    on left: 75, on right: 74
parent (95)
    on left: 76 77, on right: 75
members_methods (96)
    on left: 78 79, on right: 75 78
access (97)
    on left: 80 81 82 83, on right: 78 79
member_or_method (98)
    on left: 84 85, on right: 78 79
member (99)
    on left: 86 87, on right: 84
var_declaration (100)
    on left: 88, on right: 86 98
variabledefs (101)
    on left: 89 90, on right: 88 89 133 134
variabledef (102)
    on left: 91, on right: 89 90 114 126
anonymous_union (103)
    on left: 94, on right: 87
$@6 (104)
    on left: 92, on right: 94
$@7 (105)
    on left: 93, on right: 94
union_body (106)
    on left: 95, on right: 94 110
fields (107)
    on left: 96 97, on right: 95 96
field (108)
    on left: 98, on right: 96 97
method (109)
    on left: 99, on right: 85
short_func_declaration (110)
    on left: 100 101, on right: 99 115
short_par_func_header (111)
    on left: 102, on right: 100
func_header_start (112)
    on left: 103, on right: 102 108 121
parameter_types (113)
    on left: 104 105, on right: 102 104
pass_list_dims (114)
    on left: 106 107, on right: 104 105
nopar_func_header (115)
    on left: 108, on right: 101 119
union_declaration (116)
    on left: 110, on right: 7
$@8 (117)
    on left: 109, on right: 110
global_var_declaration (118)
    on left: 111, on right: 8
init_variabledefs (119)
    on left: 112 113, on right: 111 112
init_variabledef (120)
    on left: 114, on right: 112 113
func_declaration (121)
    on left: 115 116, on right: 9
full_func_declaration (122)
    on left: 117 118 119, on right: 116
full_par_func_header (123)
    on left: 120 121, on right: 117
class_func_header_start (124)
    on left: 122, on right: 120 128
func_class (125)
    on left: 123, on right: 122
parameter_list (126)
    on left: 124 125, on right: 120 121 124
pass_variabledef (127)
    on left: 126 127, on right: 124 125
nopar_class_func_header (128)
    on left: 128, on right: 118
decl_statements (129)
    on left: 129 130 131 132, on right: 117 118 119 196 197
declarations (130)
    on left: 133 134, on right: 129 130 133 168 169
decltype (131)
    on left: 135 136, on right: 58 133 134
statements (132)
    on left: 137 138, on right: 129 131 137 177 178 180 181
statement (133)
    on left: 139 140 141 142 143 144 145 146 147 148 149, on right:
    137 138 153 155 158 159 161 184
expression_statement (134)
    on left: 150, on right: 139
if_statement (135)
    on left: 153, on right: 140
$@9 (136)
    on left: 151, on right: 153
$@10 (137)
    on left: 152, on right: 153
if_tail (138)
    on left: 155 156, on right: 153
$@11 (139)
    on left: 154, on right: 155
while_statement (140)
    on left: 158 159, on right: 141
$@12 (141)
    on left: 157, on right: 158
for_statement (142)
    on left: 161, on right: 142
$@13 (143)
    on left: 160, on right: 161
optexpr (144)
    on left: 162 163, on right: 161 185
switch_statement (145)
    on left: 165, on right: 143
$@14 (146)
    on left: 164, on right: 165
switch_tail (147)
    on left: 166 167, on right: 165
decl_cases (148)
    on left: 168 169 170 171, on right: 166
casestatements (149)
    on left: 172 173, on right: 168 170 172
casestatement (150)
    on left: 174 175 177 178 180 181, on right: 172 173 174 175
$@15 (151)
    on left: 176, on right: 177
$@16 (152)
    on left: 179, on right: 180
single_casestatement (153)
    on left: 182 184, on right: 167 182
$@17 (154)
    on left: 183, on right: 184
return_statement (155)
    on left: 185, on right: 144
io_statement (156)
    on left: 186 187 188 189, on right: 145
in_list (157)
    on left: 190 191, on right: 186 187 190
in_item (158)
    on left: 192, on right: 190 191
out_list (159)
    on left: 193 194, on right: 188 189 193
out_item (160)
    on left: 195, on right: 193 194
comp_statement (161)
    on left: 196, on right: 146
main_function (162)
    on left: 197, on right: 1
main_header (163)
    on left: 198 199 200 201 202, on right: 197


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 3 (global_declarations)

    program              go to state 1
    global_declarations  go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: global_declarations . main_function
    2 global_declarations: global_declarations . global_declaration

    error      shift, and go to state 4
    "typedef"  shift, and go to state 5
    "char"     shift, and go to state 6
    "string"   shift, and go to state 7
    "class"    shift, and go to state 8
    "union"    shift, and go to state 9
    "id"       shift, and go to state 10
    "float"    shift, and go to state 11
    "void"     shift, and go to state 12
    "enum"     shift, and go to state 13
    "int"      shift, and go to state 14

    global_declaration       go to state 15
    typedef_declaration      go to state 16
    typename                 go to state 17
    standard_type            go to state 18
    enum_declaration         go to state 19
    class_declaration        go to state 20
    short_func_declaration   go to state 21
    short_par_func_header    go to state 22
    func_header_start        go to state 23
    nopar_func_header        go to state 24
    union_declaration        go to state 25
    global_var_declaration   go to state 26
    func_declaration         go to state 27
    full_func_declaration    go to state 28
    full_par_func_header     go to state 29
    class_func_header_start  go to state 30
    nopar_class_func_header  go to state 31
    main_function            go to state 32
    main_header              go to state 33


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

  199 main_header: error . "main" "(" ")"

    "main"  shift, and go to state 34


State 5

   11 typedef_declaration: "typedef" . typename listspec "id" $@1 dims ";"

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename       go to state 36
    standard_type  go to state 18


State 6

   14 standard_type: "char" .

    $default  reduce using rule 14 (standard_type)


State 7

   17 standard_type: "string" .

    $default  reduce using rule 17 (standard_type)


State 8

   74 class_declaration: "class" . "id" $@5 class_body ";"

    "id"  shift, and go to state 37


State 9

  110 union_declaration: "union" . "id" $@8 union_body ";"

    "id"  shift, and go to state 38


State 10

   13 typename: "id" .

    $default  reduce using rule 13 (typename)


State 11

   16 standard_type: "float" .

    $default  reduce using rule 16 (standard_type)


State 12

   18 standard_type: "void" .

    $default  reduce using rule 18 (standard_type)


State 13

   27 enum_declaration: "enum" . "id" $@2 enum_body $@3 ";"

    "id"  shift, and go to state 39


State 14

   15 standard_type: "int" .
  198 main_header: "int" . "main" "(" ")"
  200            | "int" . error "(" ")"
  201            | "int" . "main" error ")"
  202            | "int" . "main" "(" error

    error   shift, and go to state 40
    "main"  shift, and go to state 41

    "list"  reduce using rule 15 (standard_type)
    "id"    reduce using rule 15 (standard_type)


State 15

    2 global_declarations: global_declarations global_declaration .

    $default  reduce using rule 2 (global_declarations)


State 16

    4 global_declaration: typedef_declaration .

    $default  reduce using rule 4 (global_declaration)


State 17

  103 func_header_start: typename . listspec "id"
  111 global_var_declaration: typename . init_variabledefs ";"
  122 class_func_header_start: typename . listspec func_class "id"

    "list"  shift, and go to state 42

    $default  reduce using rule 20 (listspec)

    listspec           go to state 43
    variabledef        go to state 44
    init_variabledefs  go to state 45
    init_variabledef   go to state 46


State 18

   12 typename: standard_type .

    $default  reduce using rule 12 (typename)


State 19

    5 global_declaration: enum_declaration .

    $default  reduce using rule 5 (global_declaration)


State 20

    6 global_declaration: class_declaration .

    $default  reduce using rule 6 (global_declaration)


State 21

  115 func_declaration: short_func_declaration .

    $default  reduce using rule 115 (func_declaration)


State 22

  100 short_func_declaration: short_par_func_header . ";"

    ";"  shift, and go to state 47


State 23

  102 short_par_func_header: func_header_start . "(" parameter_types ")"
  108 nopar_func_header: func_header_start . "(" ")"
  121 full_par_func_header: func_header_start . "(" parameter_list ")"

    "("  shift, and go to state 48


State 24

  101 short_func_declaration: nopar_func_header . ";"
  119 full_func_declaration: nopar_func_header . "{" decl_statements "}"

    ";"  shift, and go to state 49
    "{"  shift, and go to state 50


State 25

    7 global_declaration: union_declaration .

    $default  reduce using rule 7 (global_declaration)


State 26

    8 global_declaration: global_var_declaration .

    $default  reduce using rule 8 (global_declaration)


State 27

    9 global_declaration: func_declaration .

    $default  reduce using rule 9 (global_declaration)


State 28

  116 func_declaration: full_func_declaration .

    $default  reduce using rule 116 (func_declaration)


State 29

  117 full_func_declaration: full_par_func_header . "{" decl_statements "}"

    "{"  shift, and go to state 51


State 30

  120 full_par_func_header: class_func_header_start . "(" parameter_list ")"
  128 nopar_class_func_header: class_func_header_start . "(" ")"

    "("  shift, and go to state 52


State 31

  118 full_func_declaration: nopar_class_func_header . "{" decl_statements "}"

    "{"  shift, and go to state 53


State 32

    1 program: global_declarations main_function .

    $default  reduce using rule 1 (program)


State 33

  197 main_function: main_header . "{" decl_statements "}"

    "{"  shift, and go to state 54


State 34

  199 main_header: error "main" . "(" ")"

    "("  shift, and go to state 55


State 35

   15 standard_type: "int" .

    $default  reduce using rule 15 (standard_type)


State 36

   11 typedef_declaration: "typedef" typename . listspec "id" $@1 dims ";"

    "list"  shift, and go to state 42

    $default  reduce using rule 20 (listspec)

    listspec  go to state 56


State 37

   74 class_declaration: "class" "id" . $@5 class_body ";"

    $default  reduce using rule 73 ($@5)

    $@5  go to state 57


State 38

  110 union_declaration: "union" "id" . $@8 union_body ";"

    $default  reduce using rule 109 ($@8)

    $@8  go to state 58


State 39

   27 enum_declaration: "enum" "id" . $@2 enum_body $@3 ";"

    $default  reduce using rule 25 ($@2)

    $@2  go to state 59


State 40

  200 main_header: "int" error . "(" ")"

    "("  shift, and go to state 60


State 41

  198 main_header: "int" "main" . "(" ")"
  201            | "int" "main" . error ")"
  202            | "int" "main" . "(" error

    error  shift, and go to state 61
    "("    shift, and go to state 62


State 42

   19 listspec: "list" .

    $default  reduce using rule 19 (listspec)


State 43

   91 variabledef: listspec . "id" dims
  103 func_header_start: typename listspec . "id"
  122 class_func_header_start: typename listspec . func_class "id"

    "id"  shift, and go to state 63

    func_class  go to state 64


State 44

  114 init_variabledef: variabledef . initializer

    "="  shift, and go to state 65

    $default  reduce using rule 33 (initializer)

    initializer  go to state 66


State 45

  111 global_var_declaration: typename init_variabledefs . ";"
  112 init_variabledefs: init_variabledefs . "," init_variabledef

    ";"  shift, and go to state 67
    ","  shift, and go to state 68


State 46

  113 init_variabledefs: init_variabledef .

    $default  reduce using rule 113 (init_variabledefs)


State 47

  100 short_func_declaration: short_par_func_header ";" .

    $default  reduce using rule 100 (short_func_declaration)


State 48

  102 short_par_func_header: func_header_start "(" . parameter_types ")"
  108 nopar_func_header: func_header_start "(" . ")"
  121 full_par_func_header: func_header_start "(" . parameter_list ")"

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    ")"       shift, and go to state 69
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename         go to state 70
    standard_type    go to state 18
    parameter_types  go to state 71
    parameter_list   go to state 72


State 49

  101 short_func_declaration: nopar_func_header ";" .

    $default  reduce using rule 101 (short_func_declaration)


State 50

  119 full_func_declaration: nopar_func_header "{" . decl_statements "}"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "}"       reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decl_statements       go to state 105
    declarations          go to state 106
    decltype              go to state 107
    statements            go to state 108
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 51

  117 full_func_declaration: full_par_func_header "{" . decl_statements "}"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "}"       reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decl_statements       go to state 118
    declarations          go to state 106
    decltype              go to state 107
    statements            go to state 108
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 52

  120 full_par_func_header: class_func_header_start "(" . parameter_list ")"
  128 nopar_class_func_header: class_func_header_start "(" . ")"

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    ")"       shift, and go to state 119
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename        go to state 120
    standard_type   go to state 18
    parameter_list  go to state 121


State 53

  118 full_func_declaration: nopar_class_func_header "{" . decl_statements "}"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "}"       reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decl_statements       go to state 122
    declarations          go to state 106
    decltype              go to state 107
    statements            go to state 108
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 54

  197 main_function: main_header "{" . decl_statements "}"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "}"       reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decl_statements       go to state 123
    declarations          go to state 106
    decltype              go to state 107
    statements            go to state 108
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 55

  199 main_header: error "main" "(" . ")"

    ")"  shift, and go to state 124


State 56

   11 typedef_declaration: "typedef" typename listspec . "id" $@1 dims ";"

    "id"  shift, and go to state 125


State 57

   74 class_declaration: "class" "id" $@5 . class_body ";"

    ":"  shift, and go to state 126

    $default  reduce using rule 77 (parent)

    class_body  go to state 127
    parent      go to state 128


State 58

  110 union_declaration: "union" "id" $@8 . union_body ";"

    "{"  shift, and go to state 129

    union_body  go to state 130


State 59

   27 enum_declaration: "enum" "id" $@2 . enum_body $@3 ";"

    "{"  shift, and go to state 131

    enum_body  go to state 132


State 60

  200 main_header: "int" error "(" . ")"

    ")"  shift, and go to state 133


State 61

  201 main_header: "int" "main" error . ")"

    ")"  shift, and go to state 134


State 62

  198 main_header: "int" "main" "(" . ")"
  202            | "int" "main" "(" . error

    error  shift, and go to state 135
    ")"    shift, and go to state 136


State 63

   91 variabledef: listspec "id" . dims
  103 func_header_start: typename listspec "id" .
  123 func_class: "id" . "::"

    "::"  shift, and go to state 137

    "("       reduce using rule 103 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 138


State 64

  122 class_func_header_start: typename listspec func_class . "id"

    "id"  shift, and go to state 139


State 65

   32 initializer: "=" . init_value

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 140
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    init_value      go to state 141
    expression      go to state 142
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 66

  114 init_variabledef: variabledef initializer .

    $default  reduce using rule 114 (init_variabledef)


State 67

  111 global_var_declaration: typename init_variabledefs ";" .

    $default  reduce using rule 111 (global_var_declaration)


State 68

  112 init_variabledefs: init_variabledefs "," . init_variabledef

    "list"  shift, and go to state 42

    $default  reduce using rule 20 (listspec)

    listspec          go to state 145
    variabledef       go to state 44
    init_variabledef  go to state 146


State 69

  108 nopar_func_header: func_header_start "(" ")" .

    $default  reduce using rule 108 (nopar_func_header)


State 70

  105 parameter_types: typename . pass_list_dims
  125 parameter_list: typename . pass_variabledef

    "list"  shift, and go to state 42
    "&"     shift, and go to state 147

    $default  reduce using rule 20 (listspec)

    listspec          go to state 148
    variabledef       go to state 149
    pass_list_dims    go to state 150
    pass_variabledef  go to state 151


State 71

  102 short_par_func_header: func_header_start "(" parameter_types . ")"
  104 parameter_types: parameter_types . "," typename pass_list_dims

    ")"  shift, and go to state 152
    ","  shift, and go to state 153


State 72

  121 full_par_func_header: func_header_start "(" parameter_list . ")"
  124 parameter_list: parameter_list . "," typename pass_variabledef

    ")"  shift, and go to state 154
    ","  shift, and go to state 155


State 73

   67 constant: "integer constant" .

    $default  reduce using rule 67 (constant)


State 74

   68 constant: "float constant" .

    $default  reduce using rule 68 (constant)


State 75

   69 constant: "string const" .

    $default  reduce using rule 69 (constant)


State 76

  135 decltype: "static" .

    $default  reduce using rule 135 (decltype)


State 77

  147 statement: "continue" . ";"

    ";"  shift, and go to state 156


State 78

  148 statement: "break" . ";"

    ";"  shift, and go to state 157


State 79

  153 if_statement: "if" . "(" $@9 general_expression ")" statement $@10 if_tail

    "("  shift, and go to state 158


State 80

  158 while_statement: "while" . "(" $@12 general_expression ")" statement
  159                | "while" . error general_expression ")" statement

    error  shift, and go to state 159
    "("    shift, and go to state 160


State 81

  161 for_statement: "for" . "(" $@13 optexpr ";" optexpr ";" optexpr ")" statement

    "("  shift, and go to state 161


State 82

  165 switch_statement: "switch" . "(" $@14 general_expression ")" switch_tail

    "("  shift, and go to state 162


State 83

  185 return_statement: "return" . optexpr ";"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    ";"       reduce using rule 163 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 163
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144
    optexpr             go to state 164


State 84

   50 expression: "new" . "(" general_expression ")"

    "("  shift, and go to state 165


State 85

  186 io_statement: "cin" . "<<" in_list ";"
  187             | "cin" . "<<" in_list error

    "<<"  shift, and go to state 166


State 86

  188 io_statement: "cout" . ">>" out_list ";"
  189             | "cout" . ">>" out_list error

    ">>"  shift, and go to state 167


State 87

   59 variable: "this" .

    $default  reduce using rule 59 (variable)


State 88

   43 expression: "+ or -" . expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 168
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 89

   45 expression: "-- or ++" . variable

    "static"    shift, and go to state 76
    "this"      shift, and go to state 87
    "listfunc"  shift, and go to state 91

    $default  reduce using rule 136 (decltype)

    variable  go to state 169
    decltype  go to state 144


State 90

   44 expression: "sizeof" . expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 170
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 91

   57 variable: "listfunc" . "(" general_expression ")"

    "("  shift, and go to state 171


State 92

   52 expression: "(" . general_expression ")"
   53           | "(" . standard_type ")"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "char"              shift, and go to state 6
    "string"            shift, and go to state 7
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "float"             shift, and go to state 11
    "!"                 shift, and go to state 97
    "void"              shift, and go to state 12
    "int"               shift, and go to state 35
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    standard_type       go to state 172
    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 173
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 93

  149 statement: ";" .

    $default  reduce using rule 149 (statement)


State 94

   70 listexpression: "[" . expression_list "]"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "id"      reduce using rule 136 (decltype)
    $default  reduce using rule 65 (expression_list)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 174
    assignment          go to state 102
    expression_list     go to state 175
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 95

  196 comp_statement: "{" . decl_statements "}"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "}"       reduce using rule 132 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decl_statements       go to state 176
    declarations          go to state 106
    decltype              go to state 107
    statements            go to state 108
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 96

   66 constant: "char const" .

    $default  reduce using rule 66 (constant)


State 97

   42 expression: "!" . expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 177
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 98

   49 expression: "length" . "(" general_expression ")"

    "("  shift, and go to state 178


State 99

   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression
   63 assignment: expression .

    "||"                  shift, and go to state 179
    "&&"                  shift, and go to state 180
    "== or !="            shift, and go to state 181
    "+ or -"              shift, and go to state 182
    "* or / or %"         shift, and go to state 183
    "> or >= or < or <="  shift, and go to state 184

    $default  reduce using rule 63 (assignment)


State 100

   46 expression: variable . "-- or ++"
   47           | variable .
   48           | variable . "(" expression_list ")"
   55 variable: variable . "[" general_expression "]"
   56         | variable . "." "id"
   62 assignment: variable . "=" assignment

    "-- or ++"  shift, and go to state 185
    "("         shift, and go to state 186
    "."         shift, and go to state 187
    "["         shift, and go to state 188
    "="         shift, and go to state 189

    $default  reduce using rule 47 (expression)


State 101

   60 general_expression: general_expression . "," general_expression
  150 expression_statement: general_expression . ";"

    ";"  shift, and go to state 190
    ","  shift, and go to state 191


State 102

   61 general_expression: assignment .

    $default  reduce using rule 61 (general_expression)


State 103

   51 expression: constant .

    $default  reduce using rule 51 (expression)


State 104

   54 expression: listexpression .

    $default  reduce using rule 54 (expression)


State 105

  119 full_func_declaration: nopar_func_header "{" decl_statements . "}"

    "}"  shift, and go to state 192


State 106

  129 decl_statements: declarations . statements
  130                | declarations .
  133 declarations: declarations . decltype typename variabledefs ";"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "}"       reduce using rule 130 (decl_statements)
    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 193
    statements            go to state 194
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 107

   58 variable: decltype . "id"
  134 declarations: decltype . typename variabledefs ";"

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 195
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename       go to state 196
    standard_type  go to state 18


State 108

  131 decl_statements: statements .
  137 statements: statements . statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "id"      reduce using rule 136 (decltype)
    $default  reduce using rule 131 (decl_statements)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 197
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 109

  138 statements: statement .

    $default  reduce using rule 138 (statements)


State 110

  139 statement: expression_statement .

    $default  reduce using rule 139 (statement)


State 111

  140 statement: if_statement .

    $default  reduce using rule 140 (statement)


State 112

  141 statement: while_statement .

    $default  reduce using rule 141 (statement)


State 113

  142 statement: for_statement .

    $default  reduce using rule 142 (statement)


State 114

  143 statement: switch_statement .

    $default  reduce using rule 143 (statement)


State 115

  144 statement: return_statement .

    $default  reduce using rule 144 (statement)


State 116

  145 statement: io_statement .

    $default  reduce using rule 145 (statement)


State 117

  146 statement: comp_statement .

    $default  reduce using rule 146 (statement)


State 118

  117 full_func_declaration: full_par_func_header "{" decl_statements . "}"

    "}"  shift, and go to state 198


State 119

  128 nopar_class_func_header: class_func_header_start "(" ")" .

    $default  reduce using rule 128 (nopar_class_func_header)


State 120

  125 parameter_list: typename . pass_variabledef

    "list"  shift, and go to state 42
    "&"     shift, and go to state 199

    $default  reduce using rule 20 (listspec)

    listspec          go to state 145
    variabledef       go to state 149
    pass_variabledef  go to state 151


State 121

  120 full_par_func_header: class_func_header_start "(" parameter_list . ")"
  124 parameter_list: parameter_list . "," typename pass_variabledef

    ")"  shift, and go to state 200
    ","  shift, and go to state 155


State 122

  118 full_func_declaration: nopar_class_func_header "{" decl_statements . "}"

    "}"  shift, and go to state 201


State 123

  197 main_function: main_header "{" decl_statements . "}"

    "}"  shift, and go to state 202


State 124

  199 main_header: error "main" "(" ")" .

    $default  reduce using rule 199 (main_header)


State 125

   11 typedef_declaration: "typedef" typename listspec "id" . $@1 dims ";"

    $default  reduce using rule 10 ($@1)

    $@1  go to state 203


State 126

   76 parent: ":" . "id"

    "id"  shift, and go to state 204


State 127

   74 class_declaration: "class" "id" $@5 class_body . ";"

    ";"  shift, and go to state 205


State 128

   75 class_body: parent . "{" members_methods "}"

    "{"  shift, and go to state 206


State 129

   95 union_body: "{" . fields "}"

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename         go to state 207
    standard_type    go to state 18
    var_declaration  go to state 208
    fields           go to state 209
    field            go to state 210


State 130

  110 union_declaration: "union" "id" $@8 union_body . ";"

    ";"  shift, and go to state 211


State 131

   28 enum_body: "{" . id_list "}"

    "id"  shift, and go to state 212

    id_list  go to state 213


State 132

   27 enum_declaration: "enum" "id" $@2 enum_body . $@3 ";"

    $default  reduce using rule 26 ($@3)

    $@3  go to state 214


State 133

  200 main_header: "int" error "(" ")" .

    $default  reduce using rule 200 (main_header)


State 134

  201 main_header: "int" "main" error ")" .

    $default  reduce using rule 201 (main_header)


State 135

  202 main_header: "int" "main" "(" error .

    $default  reduce using rule 202 (main_header)


State 136

  198 main_header: "int" "main" "(" ")" .

    $default  reduce using rule 198 (main_header)


State 137

  123 func_class: "id" "::" .

    $default  reduce using rule 123 (func_class)


State 138

   21 dims: dims . dim
   91 variabledef: listspec "id" dims .

    "["  shift, and go to state 215

    $default  reduce using rule 91 (variabledef)

    dim  go to state 216


State 139

  122 class_func_header_start: typename listspec func_class "id" .

    $default  reduce using rule 122 (class_func_header_start)


State 140

   35 init_value: "{" . init_values "}"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 140
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    init_value      go to state 217
    expression      go to state 142
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    init_values     go to state 218
    decltype        go to state 144


State 141

   32 initializer: "=" init_value .

    $default  reduce using rule 32 (initializer)


State 142

   34 init_value: expression .
   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression

    "||"                  shift, and go to state 179
    "&&"                  shift, and go to state 180
    "== or !="            shift, and go to state 181
    "+ or -"              shift, and go to state 182
    "* or / or %"         shift, and go to state 183
    "> or >= or < or <="  shift, and go to state 184

    $default  reduce using rule 34 (init_value)


State 143

   46 expression: variable . "-- or ++"
   47           | variable .
   48           | variable . "(" expression_list ")"
   55 variable: variable . "[" general_expression "]"
   56         | variable . "." "id"

    "-- or ++"  shift, and go to state 185
    "("         shift, and go to state 186
    "."         shift, and go to state 187
    "["         shift, and go to state 188

    $default  reduce using rule 47 (expression)


State 144

   58 variable: decltype . "id"

    "id"  shift, and go to state 219


State 145

   91 variabledef: listspec . "id" dims

    "id"  shift, and go to state 220


State 146

  112 init_variabledefs: init_variabledefs "," init_variabledef .

    $default  reduce using rule 112 (init_variabledefs)


State 147

  106 pass_list_dims: "&" .
  127 pass_variabledef: "&" . "id"

    "id"  shift, and go to state 221

    $default  reduce using rule 106 (pass_list_dims)


State 148

   91 variabledef: listspec . "id" dims
  107 pass_list_dims: listspec . dims

    "id"  shift, and go to state 220

    $default  reduce using rule 22 (dims)

    dims  go to state 222


State 149

  126 pass_variabledef: variabledef .

    $default  reduce using rule 126 (pass_variabledef)


State 150

  105 parameter_types: typename pass_list_dims .

    $default  reduce using rule 105 (parameter_types)


State 151

  125 parameter_list: typename pass_variabledef .

    $default  reduce using rule 125 (parameter_list)


State 152

  102 short_par_func_header: func_header_start "(" parameter_types ")" .

    $default  reduce using rule 102 (short_par_func_header)


State 153

  104 parameter_types: parameter_types "," . typename pass_list_dims

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename       go to state 223
    standard_type  go to state 18


State 154

  121 full_par_func_header: func_header_start "(" parameter_list ")" .

    $default  reduce using rule 121 (full_par_func_header)


State 155

  124 parameter_list: parameter_list "," . typename pass_variabledef

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename       go to state 224
    standard_type  go to state 18


State 156

  147 statement: "continue" ";" .

    $default  reduce using rule 147 (statement)


State 157

  148 statement: "break" ";" .

    $default  reduce using rule 148 (statement)


State 158

  153 if_statement: "if" "(" . $@9 general_expression ")" statement $@10 if_tail

    $default  reduce using rule 151 ($@9)

    $@9  go to state 225


State 159

  159 while_statement: "while" error . general_expression ")" statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 226
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 160

  158 while_statement: "while" "(" . $@12 general_expression ")" statement

    $default  reduce using rule 157 ($@12)

    $@12  go to state 227


State 161

  161 for_statement: "for" "(" . $@13 optexpr ";" optexpr ";" optexpr ")" statement

    $default  reduce using rule 160 ($@13)

    $@13  go to state 228


State 162

  165 switch_statement: "switch" "(" . $@14 general_expression ")" switch_tail

    $default  reduce using rule 164 ($@14)

    $@14  go to state 229


State 163

   60 general_expression: general_expression . "," general_expression
  162 optexpr: general_expression .

    ","  shift, and go to state 191

    $default  reduce using rule 162 (optexpr)


State 164

  185 return_statement: "return" optexpr . ";"

    ";"  shift, and go to state 230


State 165

   50 expression: "new" "(" . general_expression ")"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 231
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 166

  186 io_statement: "cin" "<<" . in_list ";"
  187             | "cin" "<<" . in_list error

    "static"    shift, and go to state 76
    "this"      shift, and go to state 87
    "listfunc"  shift, and go to state 91

    $default  reduce using rule 136 (decltype)

    variable  go to state 232
    decltype  go to state 144
    in_list   go to state 233
    in_item   go to state 234


State 167

  188 io_statement: "cout" ">>" . out_list ";"
  189             | "cout" ">>" . out_list error

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 235
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144
    out_list            go to state 236
    out_item            go to state 237


State 168

   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression
   43           | "+ or -" expression .

    $default  reduce using rule 43 (expression)


State 169

   45 expression: "-- or ++" variable .
   55 variable: variable . "[" general_expression "]"
   56         | variable . "." "id"

    "."  shift, and go to state 187
    "["  shift, and go to state 188

    $default  reduce using rule 45 (expression)


State 170

   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression
   44           | "sizeof" expression .

    $default  reduce using rule 44 (expression)


State 171

   57 variable: "listfunc" "(" . general_expression ")"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 238
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 172

   53 expression: "(" standard_type . ")"

    ")"  shift, and go to state 239


State 173

   52 expression: "(" general_expression . ")"
   60 general_expression: general_expression . "," general_expression

    ")"  shift, and go to state 240
    ","  shift, and go to state 191


State 174

   60 general_expression: general_expression . "," general_expression
   64 expression_list: general_expression .

    ","  shift, and go to state 191

    $default  reduce using rule 64 (expression_list)


State 175

   70 listexpression: "[" expression_list . "]"

    "]"  shift, and go to state 241


State 176

  196 comp_statement: "{" decl_statements . "}"

    "}"  shift, and go to state 242


State 177

   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression
   42           | "!" expression .

    $default  reduce using rule 42 (expression)


State 178

   49 expression: "length" "(" . general_expression ")"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 243
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 179

   36 expression: expression "||" . expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 244
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 180

   37 expression: expression "&&" . expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 245
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 181

   38 expression: expression "== or !=" . expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 246
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 182

   40 expression: expression "+ or -" . expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 247
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 183

   41 expression: expression "* or / or %" . expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 248
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 184

   39 expression: expression "> or >= or < or <=" . expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 249
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 185

   46 expression: variable "-- or ++" .

    $default  reduce using rule 46 (expression)


State 186

   48 expression: variable "(" . expression_list ")"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "id"      reduce using rule 136 (decltype)
    $default  reduce using rule 65 (expression_list)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 174
    assignment          go to state 102
    expression_list     go to state 250
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 187

   56 variable: variable "." . "id"

    "id"  shift, and go to state 251


State 188

   55 variable: variable "[" . general_expression "]"

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 252
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 189

   62 assignment: variable "=" . assignment

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression      go to state 99
    variable        go to state 100
    assignment      go to state 253
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 190

  150 expression_statement: general_expression ";" .

    $default  reduce using rule 150 (expression_statement)


State 191

   60 general_expression: general_expression "," . general_expression

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 254
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 192

  119 full_func_declaration: nopar_func_header "{" decl_statements "}" .

    $default  reduce using rule 119 (full_func_declaration)


State 193

   58 variable: decltype . "id"
  133 declarations: declarations decltype . typename variabledefs ";"

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 195
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename       go to state 255
    standard_type  go to state 18


State 194

  129 decl_statements: declarations statements .
  137 statements: statements . statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "id"      reduce using rule 136 (decltype)
    $default  reduce using rule 129 (decl_statements)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 197
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 195

   13 typename: "id" .
   58 variable: decltype "id" .

    "list"    reduce using rule 13 (typename)
    "id"      reduce using rule 13 (typename)
    $default  reduce using rule 58 (variable)


State 196

  134 declarations: decltype typename . variabledefs ";"

    "list"  shift, and go to state 42

    $default  reduce using rule 20 (listspec)

    listspec      go to state 145
    variabledefs  go to state 256
    variabledef   go to state 257


State 197

  137 statements: statements statement .

    $default  reduce using rule 137 (statements)


State 198

  117 full_func_declaration: full_par_func_header "{" decl_statements "}" .

    $default  reduce using rule 117 (full_func_declaration)


State 199

  127 pass_variabledef: "&" . "id"

    "id"  shift, and go to state 221


State 200

  120 full_par_func_header: class_func_header_start "(" parameter_list ")" .

    $default  reduce using rule 120 (full_par_func_header)


State 201

  118 full_func_declaration: nopar_class_func_header "{" decl_statements "}" .

    $default  reduce using rule 118 (full_func_declaration)


State 202

  197 main_function: main_header "{" decl_statements "}" .

    $default  reduce using rule 197 (main_function)


State 203

   11 typedef_declaration: "typedef" typename listspec "id" $@1 . dims ";"

    $default  reduce using rule 22 (dims)

    dims  go to state 258


State 204

   76 parent: ":" "id" .

    $default  reduce using rule 76 (parent)


State 205

   74 class_declaration: "class" "id" $@5 class_body ";" .

    $default  reduce using rule 74 (class_declaration)


State 206

   75 class_body: parent "{" . members_methods "}"

    "private"    shift, and go to state 259
    "protected"  shift, and go to state 260
    "public"     shift, and go to state 261

    $default  reduce using rule 83 (access)

    members_methods  go to state 262
    access           go to state 263


State 207

   88 var_declaration: typename . variabledefs ";"

    "list"  shift, and go to state 42

    $default  reduce using rule 20 (listspec)

    listspec      go to state 145
    variabledefs  go to state 264
    variabledef   go to state 257


State 208

   98 field: var_declaration .

    $default  reduce using rule 98 (field)


State 209

   95 union_body: "{" fields . "}"
   96 fields: fields . field

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    "}"       shift, and go to state 265
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename         go to state 207
    standard_type    go to state 18
    var_declaration  go to state 208
    field            go to state 266


State 210

   97 fields: field .

    $default  reduce using rule 97 (fields)


State 211

  110 union_declaration: "union" "id" $@8 union_body ";" .

    $default  reduce using rule 110 (union_declaration)


State 212

   31 id_list: "id" . $@4 initializer

    $default  reduce using rule 30 ($@4)

    $@4  go to state 267


State 213

   28 enum_body: "{" id_list . "}"
   29 id_list: id_list . "," "id" initializer

    ","  shift, and go to state 268
    "}"  shift, and go to state 269


State 214

   27 enum_declaration: "enum" "id" $@2 enum_body $@3 . ";"

    ";"  shift, and go to state 270


State 215

   23 dim: "[" . "integer constant" "]"
   24    | "[" . "]"

    "integer constant"  shift, and go to state 271
    "]"                 shift, and go to state 272


State 216

   21 dims: dims dim .

    $default  reduce using rule 21 (dims)


State 217

   72 init_values: init_value .

    $default  reduce using rule 72 (init_values)


State 218

   35 init_value: "{" init_values . "}"
   71 init_values: init_values . "," init_value

    ","  shift, and go to state 273
    "}"  shift, and go to state 274


State 219

   58 variable: decltype "id" .

    $default  reduce using rule 58 (variable)


State 220

   91 variabledef: listspec "id" . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 138


State 221

  127 pass_variabledef: "&" "id" .

    $default  reduce using rule 127 (pass_variabledef)


State 222

   21 dims: dims . dim
  107 pass_list_dims: listspec dims .

    "["  shift, and go to state 215

    $default  reduce using rule 107 (pass_list_dims)

    dim  go to state 216


State 223

  104 parameter_types: parameter_types "," typename . pass_list_dims

    "list"  shift, and go to state 42
    "&"     shift, and go to state 275

    $default  reduce using rule 20 (listspec)

    listspec        go to state 276
    pass_list_dims  go to state 277


State 224

  124 parameter_list: parameter_list "," typename . pass_variabledef

    "list"  shift, and go to state 42
    "&"     shift, and go to state 199

    $default  reduce using rule 20 (listspec)

    listspec          go to state 145
    variabledef       go to state 149
    pass_variabledef  go to state 278


State 225

  153 if_statement: "if" "(" $@9 . general_expression ")" statement $@10 if_tail

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 279
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 226

   60 general_expression: general_expression . "," general_expression
  159 while_statement: "while" error general_expression . ")" statement

    ")"  shift, and go to state 280
    ","  shift, and go to state 191


State 227

  158 while_statement: "while" "(" $@12 . general_expression ")" statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 281
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 228

  161 for_statement: "for" "(" $@13 . optexpr ";" optexpr ";" optexpr ")" statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    ";"       reduce using rule 163 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 163
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144
    optexpr             go to state 282


State 229

  165 switch_statement: "switch" "(" $@14 . general_expression ")" switch_tail

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 283
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144


State 230

  185 return_statement: "return" optexpr ";" .

    $default  reduce using rule 185 (return_statement)


State 231

   50 expression: "new" "(" general_expression . ")"
   60 general_expression: general_expression . "," general_expression

    ")"  shift, and go to state 284
    ","  shift, and go to state 191


State 232

   55 variable: variable . "[" general_expression "]"
   56         | variable . "." "id"
  192 in_item: variable .

    "."  shift, and go to state 187
    "["  shift, and go to state 188

    $default  reduce using rule 192 (in_item)


State 233

  186 io_statement: "cin" "<<" in_list . ";"
  187             | "cin" "<<" in_list . error
  190 in_list: in_list . "<<" in_item

    error  shift, and go to state 285
    ";"    shift, and go to state 286
    "<<"   shift, and go to state 287


State 234

  191 in_list: in_item .

    $default  reduce using rule 191 (in_list)


State 235

   60 general_expression: general_expression . "," general_expression
  195 out_item: general_expression .

    ","  shift, and go to state 191

    $default  reduce using rule 195 (out_item)


State 236

  188 io_statement: "cout" ">>" out_list . ";"
  189             | "cout" ">>" out_list . error
  193 out_list: out_list . ">>" out_item

    error  shift, and go to state 288
    ";"    shift, and go to state 289
    ">>"   shift, and go to state 290


State 237

  194 out_list: out_item .

    $default  reduce using rule 194 (out_list)


State 238

   57 variable: "listfunc" "(" general_expression . ")"
   60 general_expression: general_expression . "," general_expression

    ")"  shift, and go to state 291
    ","  shift, and go to state 191


State 239

   53 expression: "(" standard_type ")" .

    $default  reduce using rule 53 (expression)


State 240

   52 expression: "(" general_expression ")" .

    $default  reduce using rule 52 (expression)


State 241

   70 listexpression: "[" expression_list "]" .

    $default  reduce using rule 70 (listexpression)


State 242

  196 comp_statement: "{" decl_statements "}" .

    $default  reduce using rule 196 (comp_statement)


State 243

   49 expression: "length" "(" general_expression . ")"
   60 general_expression: general_expression . "," general_expression

    ")"  shift, and go to state 292
    ","  shift, and go to state 191


State 244

   36 expression: expression . "||" expression
   36           | expression "||" expression .
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression

    "&&"                  shift, and go to state 180
    "== or !="            shift, and go to state 181
    "+ or -"              shift, and go to state 182
    "* or / or %"         shift, and go to state 183
    "> or >= or < or <="  shift, and go to state 184

    $default  reduce using rule 36 (expression)


State 245

   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   37           | expression "&&" expression .
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression

    "== or !="            shift, and go to state 181
    "+ or -"              shift, and go to state 182
    "* or / or %"         shift, and go to state 183
    "> or >= or < or <="  shift, and go to state 184

    $default  reduce using rule 37 (expression)


State 246

   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   38           | expression "== or !=" expression .
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression

    "+ or -"              shift, and go to state 182
    "* or / or %"         shift, and go to state 183
    "> or >= or < or <="  shift, and go to state 184

    $default  reduce using rule 38 (expression)


State 247

   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   40           | expression "+ or -" expression .
   41           | expression . "* or / or %" expression

    "* or / or %"  shift, and go to state 183

    $default  reduce using rule 40 (expression)


State 248

   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression
   41           | expression "* or / or %" expression .

    $default  reduce using rule 41 (expression)


State 249

   36 expression: expression . "||" expression
   37           | expression . "&&" expression
   38           | expression . "== or !=" expression
   39           | expression . "> or >= or < or <=" expression
   39           | expression "> or >= or < or <=" expression .
   40           | expression . "+ or -" expression
   41           | expression . "* or / or %" expression

    "+ or -"       shift, and go to state 182
    "* or / or %"  shift, and go to state 183

    $default  reduce using rule 39 (expression)


State 250

   48 expression: variable "(" expression_list . ")"

    ")"  shift, and go to state 293


State 251

   56 variable: variable "." "id" .

    $default  reduce using rule 56 (variable)


State 252

   55 variable: variable "[" general_expression . "]"
   60 general_expression: general_expression . "," general_expression

    ","  shift, and go to state 191
    "]"  shift, and go to state 294


State 253

   62 assignment: variable "=" assignment .

    $default  reduce using rule 62 (assignment)


State 254

   60 general_expression: general_expression . "," general_expression
   60                   | general_expression "," general_expression .

    $default  reduce using rule 60 (general_expression)


State 255

  133 declarations: declarations decltype typename . variabledefs ";"

    "list"  shift, and go to state 42

    $default  reduce using rule 20 (listspec)

    listspec      go to state 145
    variabledefs  go to state 295
    variabledef   go to state 257


State 256

   89 variabledefs: variabledefs . "," variabledef
  134 declarations: decltype typename variabledefs . ";"

    ";"  shift, and go to state 296
    ","  shift, and go to state 297


State 257

   90 variabledefs: variabledef .

    $default  reduce using rule 90 (variabledefs)


State 258

   11 typedef_declaration: "typedef" typename listspec "id" $@1 dims . ";"
   21 dims: dims . dim

    ";"  shift, and go to state 298
    "["  shift, and go to state 215

    dim  go to state 216


State 259

   80 access: "private" . ":"

    ":"  shift, and go to state 299


State 260

   81 access: "protected" . ":"

    ":"  shift, and go to state 300


State 261

   82 access: "public" . ":"

    ":"  shift, and go to state 301


State 262

   75 class_body: parent "{" members_methods . "}"
   78 members_methods: members_methods . access member_or_method

    "private"    shift, and go to state 259
    "protected"  shift, and go to state 260
    "public"     shift, and go to state 261
    "}"          shift, and go to state 302

    $default  reduce using rule 83 (access)

    access  go to state 303


State 263

   79 members_methods: access . member_or_method

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "union"   shift, and go to state 304
    "id"      shift, and go to state 10
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename                go to state 305
    standard_type           go to state 18
    member_or_method        go to state 306
    member                  go to state 307
    var_declaration         go to state 308
    anonymous_union         go to state 309
    method                  go to state 310
    short_func_declaration  go to state 311
    short_par_func_header   go to state 22
    func_header_start       go to state 312
    nopar_func_header       go to state 313


State 264

   88 var_declaration: typename variabledefs . ";"
   89 variabledefs: variabledefs . "," variabledef

    ";"  shift, and go to state 314
    ","  shift, and go to state 297


State 265

   95 union_body: "{" fields "}" .

    $default  reduce using rule 95 (union_body)


State 266

   96 fields: fields field .

    $default  reduce using rule 96 (fields)


State 267

   31 id_list: "id" $@4 . initializer

    "="  shift, and go to state 65

    $default  reduce using rule 33 (initializer)

    initializer  go to state 315


State 268

   29 id_list: id_list "," . "id" initializer

    "id"  shift, and go to state 316


State 269

   28 enum_body: "{" id_list "}" .

    $default  reduce using rule 28 (enum_body)


State 270

   27 enum_declaration: "enum" "id" $@2 enum_body $@3 ";" .

    $default  reduce using rule 27 (enum_declaration)


State 271

   23 dim: "[" "integer constant" . "]"

    "]"  shift, and go to state 317


State 272

   24 dim: "[" "]" .

    $default  reduce using rule 24 (dim)


State 273

   71 init_values: init_values "," . init_value

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 140
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    init_value      go to state 318
    expression      go to state 142
    variable        go to state 143
    constant        go to state 103
    listexpression  go to state 104
    decltype        go to state 144


State 274

   35 init_value: "{" init_values "}" .

    $default  reduce using rule 35 (init_value)


State 275

  106 pass_list_dims: "&" .

    $default  reduce using rule 106 (pass_list_dims)


State 276

  107 pass_list_dims: listspec . dims

    $default  reduce using rule 22 (dims)

    dims  go to state 222


State 277

  104 parameter_types: parameter_types "," typename pass_list_dims .

    $default  reduce using rule 104 (parameter_types)


State 278

  124 parameter_list: parameter_list "," typename pass_variabledef .

    $default  reduce using rule 124 (parameter_list)


State 279

   60 general_expression: general_expression . "," general_expression
  153 if_statement: "if" "(" $@9 general_expression . ")" statement $@10 if_tail

    ")"  shift, and go to state 319
    ","  shift, and go to state 191


State 280

  159 while_statement: "while" error general_expression ")" . statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 320
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 281

   60 general_expression: general_expression . "," general_expression
  158 while_statement: "while" "(" $@12 general_expression . ")" statement

    ")"  shift, and go to state 321
    ","  shift, and go to state 191


State 282

  161 for_statement: "for" "(" $@13 optexpr . ";" optexpr ";" optexpr ")" statement

    ";"  shift, and go to state 322


State 283

   60 general_expression: general_expression . "," general_expression
  165 switch_statement: "switch" "(" $@14 general_expression . ")" switch_tail

    ")"  shift, and go to state 323
    ","  shift, and go to state 191


State 284

   50 expression: "new" "(" general_expression ")" .

    $default  reduce using rule 50 (expression)


State 285

  187 io_statement: "cin" "<<" in_list error .

    $default  reduce using rule 187 (io_statement)


State 286

  186 io_statement: "cin" "<<" in_list ";" .

    $default  reduce using rule 186 (io_statement)


State 287

  190 in_list: in_list "<<" . in_item

    "static"    shift, and go to state 76
    "this"      shift, and go to state 87
    "listfunc"  shift, and go to state 91

    $default  reduce using rule 136 (decltype)

    variable  go to state 232
    decltype  go to state 144
    in_item   go to state 324


State 288

  189 io_statement: "cout" ">>" out_list error .

    $default  reduce using rule 189 (io_statement)


State 289

  188 io_statement: "cout" ">>" out_list ";" .

    $default  reduce using rule 188 (io_statement)


State 290

  193 out_list: out_list ">>" . out_item

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 235
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144
    out_item            go to state 325


State 291

   57 variable: "listfunc" "(" general_expression ")" .

    $default  reduce using rule 57 (variable)


State 292

   49 expression: "length" "(" general_expression ")" .

    $default  reduce using rule 49 (expression)


State 293

   48 expression: variable "(" expression_list ")" .

    $default  reduce using rule 48 (expression)


State 294

   55 variable: variable "[" general_expression "]" .

    $default  reduce using rule 55 (variable)


State 295

   89 variabledefs: variabledefs . "," variabledef
  133 declarations: declarations decltype typename variabledefs . ";"

    ";"  shift, and go to state 326
    ","  shift, and go to state 297


State 296

  134 declarations: decltype typename variabledefs ";" .

    $default  reduce using rule 134 (declarations)


State 297

   89 variabledefs: variabledefs "," . variabledef

    "list"  shift, and go to state 42

    $default  reduce using rule 20 (listspec)

    listspec     go to state 145
    variabledef  go to state 327


State 298

   11 typedef_declaration: "typedef" typename listspec "id" $@1 dims ";" .

    $default  reduce using rule 11 (typedef_declaration)


State 299

   80 access: "private" ":" .

    $default  reduce using rule 80 (access)


State 300

   81 access: "protected" ":" .

    $default  reduce using rule 81 (access)


State 301

   82 access: "public" ":" .

    $default  reduce using rule 82 (access)


State 302

   75 class_body: parent "{" members_methods "}" .

    $default  reduce using rule 75 (class_body)


State 303

   78 members_methods: members_methods access . member_or_method

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "union"   shift, and go to state 304
    "id"      shift, and go to state 10
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename                go to state 305
    standard_type           go to state 18
    member_or_method        go to state 328
    member                  go to state 307
    var_declaration         go to state 308
    anonymous_union         go to state 309
    method                  go to state 310
    short_func_declaration  go to state 311
    short_par_func_header   go to state 22
    func_header_start       go to state 312
    nopar_func_header       go to state 313


State 304

   94 anonymous_union: "union" . $@6 union_body $@7 ";"

    $default  reduce using rule 92 ($@6)

    $@6  go to state 329


State 305

   88 var_declaration: typename . variabledefs ";"
  103 func_header_start: typename . listspec "id"

    "list"  shift, and go to state 42

    $default  reduce using rule 20 (listspec)

    listspec      go to state 330
    variabledefs  go to state 264
    variabledef   go to state 257


State 306

   79 members_methods: access member_or_method .

    $default  reduce using rule 79 (members_methods)


State 307

   84 member_or_method: member .

    $default  reduce using rule 84 (member_or_method)


State 308

   86 member: var_declaration .

    $default  reduce using rule 86 (member)


State 309

   87 member: anonymous_union .

    $default  reduce using rule 87 (member)


State 310

   85 member_or_method: method .

    $default  reduce using rule 85 (member_or_method)


State 311

   99 method: short_func_declaration .

    $default  reduce using rule 99 (method)


State 312

  102 short_par_func_header: func_header_start . "(" parameter_types ")"
  108 nopar_func_header: func_header_start . "(" ")"

    "("  shift, and go to state 331


State 313

  101 short_func_declaration: nopar_func_header . ";"

    ";"  shift, and go to state 49


State 314

   88 var_declaration: typename variabledefs ";" .

    $default  reduce using rule 88 (var_declaration)


State 315

   31 id_list: "id" $@4 initializer .

    $default  reduce using rule 31 (id_list)


State 316

   29 id_list: id_list "," "id" . initializer

    "="  shift, and go to state 65

    $default  reduce using rule 33 (initializer)

    initializer  go to state 332


State 317

   23 dim: "[" "integer constant" "]" .

    $default  reduce using rule 23 (dim)


State 318

   71 init_values: init_values "," init_value .

    $default  reduce using rule 71 (init_values)


State 319

  153 if_statement: "if" "(" $@9 general_expression ")" . statement $@10 if_tail

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 333
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 320

  159 while_statement: "while" error general_expression ")" statement .

    $default  reduce using rule 159 (while_statement)


State 321

  158 while_statement: "while" "(" $@12 general_expression ")" . statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 334
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 322

  161 for_statement: "for" "(" $@13 optexpr ";" . optexpr ";" optexpr ")" statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    ";"       reduce using rule 163 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 163
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144
    optexpr             go to state 335


State 323

  165 switch_statement: "switch" "(" $@14 general_expression ")" . switch_tail

    "{"     shift, and go to state 336
    "case"  shift, and go to state 337

    switch_tail           go to state 338
    single_casestatement  go to state 339


State 324

  190 in_list: in_list "<<" in_item .

    $default  reduce using rule 190 (in_list)


State 325

  193 out_list: out_list ">>" out_item .

    $default  reduce using rule 193 (out_list)


State 326

  133 declarations: declarations decltype typename variabledefs ";" .

    $default  reduce using rule 133 (declarations)


State 327

   89 variabledefs: variabledefs "," variabledef .

    $default  reduce using rule 89 (variabledefs)


State 328

   78 members_methods: members_methods access member_or_method .

    $default  reduce using rule 78 (members_methods)


State 329

   94 anonymous_union: "union" $@6 . union_body $@7 ";"

    "{"  shift, and go to state 129

    union_body  go to state 340


State 330

   91 variabledef: listspec . "id" dims
  103 func_header_start: typename listspec . "id"

    "id"  shift, and go to state 341


State 331

  102 short_par_func_header: func_header_start "(" . parameter_types ")"
  108 nopar_func_header: func_header_start "(" . ")"

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    ")"       shift, and go to state 69
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename         go to state 342
    standard_type    go to state 18
    parameter_types  go to state 71


State 332

   29 id_list: id_list "," "id" initializer .

    $default  reduce using rule 29 (id_list)


State 333

  153 if_statement: "if" "(" $@9 general_expression ")" statement . $@10 if_tail

    $default  reduce using rule 152 ($@10)

    $@10  go to state 343


State 334

  158 while_statement: "while" "(" $@12 general_expression ")" statement .

    $default  reduce using rule 158 (while_statement)


State 335

  161 for_statement: "for" "(" $@13 optexpr ";" optexpr . ";" optexpr ")" statement

    ";"  shift, and go to state 344


State 336

  166 switch_tail: "{" . decl_cases "}"

    "static"   shift, and go to state 76
    "default"  shift, and go to state 345
    "case"     shift, and go to state 346

    "}"       reduce using rule 171 (decl_cases)
    $default  reduce using rule 136 (decltype)

    declarations    go to state 347
    decltype        go to state 348
    decl_cases      go to state 349
    casestatements  go to state 350
    casestatement   go to state 351


State 337

  182 single_casestatement: "case" . constant ":" single_casestatement
  184                     | "case" . constant ":" $@17 statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "char const"        shift, and go to state 96

    constant  go to state 352


State 338

  165 switch_statement: "switch" "(" $@14 general_expression ")" switch_tail .

    $default  reduce using rule 165 (switch_statement)


State 339

  167 switch_tail: single_casestatement .

    $default  reduce using rule 167 (switch_tail)


State 340

   94 anonymous_union: "union" $@6 union_body . $@7 ";"

    $default  reduce using rule 93 ($@7)

    $@7  go to state 353


State 341

   91 variabledef: listspec "id" . dims
  103 func_header_start: typename listspec "id" .

    "("       reduce using rule 103 (func_header_start)
    $default  reduce using rule 22 (dims)

    dims  go to state 138


State 342

  105 parameter_types: typename . pass_list_dims

    "list"  shift, and go to state 42
    "&"     shift, and go to state 275

    $default  reduce using rule 20 (listspec)

    listspec        go to state 276
    pass_list_dims  go to state 150


State 343

  153 if_statement: "if" "(" $@9 general_expression ")" statement $@10 . if_tail

    "else"  shift, and go to state 354

    $default  reduce using rule 156 (if_tail)

    if_tail  go to state 355


State 344

  161 for_statement: "for" "(" $@13 optexpr ";" optexpr ";" . optexpr ")" statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "new"               shift, and go to state 84
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    "["                 shift, and go to state 94
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    ")"       reduce using rule 163 (optexpr)
    $default  reduce using rule 136 (decltype)

    expression          go to state 99
    variable            go to state 100
    general_expression  go to state 163
    assignment          go to state 102
    constant            go to state 103
    listexpression      go to state 104
    decltype            go to state 144
    optexpr             go to state 356


State 345

  180 casestatement: "default" . ":" $@16 statements
  181              | "default" . error statements

    error  shift, and go to state 357
    ":"    shift, and go to state 358


State 346

  174 casestatement: "case" . constant ":" casestatement
  175              | "case" . constant error casestatement
  177              | "case" . constant ":" $@15 statements
  178              | "case" . constant error statements

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "char const"        shift, and go to state 96

    constant  go to state 359


State 347

  133 declarations: declarations . decltype typename variabledefs ";"
  168 decl_cases: declarations . casestatements
  169           | declarations .

    "static"   shift, and go to state 76
    "default"  shift, and go to state 345
    "case"     shift, and go to state 346

    "}"       reduce using rule 169 (decl_cases)
    $default  reduce using rule 136 (decltype)

    decltype        go to state 360
    casestatements  go to state 361
    casestatement   go to state 351


State 348

  134 declarations: decltype . typename variabledefs ";"

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename       go to state 196
    standard_type  go to state 18


State 349

  166 switch_tail: "{" decl_cases . "}"

    "}"  shift, and go to state 362


State 350

  170 decl_cases: casestatements .
  172 casestatements: casestatements . casestatement

    "default"  shift, and go to state 345
    "case"     shift, and go to state 346

    $default  reduce using rule 170 (decl_cases)

    casestatement  go to state 363


State 351

  173 casestatements: casestatement .

    $default  reduce using rule 173 (casestatements)


State 352

  182 single_casestatement: "case" constant . ":" single_casestatement
  184                     | "case" constant . ":" $@17 statement

    ":"  shift, and go to state 364


State 353

   94 anonymous_union: "union" $@6 union_body $@7 . ";"

    ";"  shift, and go to state 365


State 354

  155 if_tail: "else" . $@11 statement

    $default  reduce using rule 154 ($@11)

    $@11  go to state 366


State 355

  153 if_statement: "if" "(" $@9 general_expression ")" statement $@10 if_tail .

    $default  reduce using rule 153 (if_statement)


State 356

  161 for_statement: "for" "(" $@13 optexpr ";" optexpr ";" optexpr . ")" statement

    ")"  shift, and go to state 367


State 357

  181 casestatement: "default" error . statements

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statements            go to state 368
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 358

  180 casestatement: "default" ":" . $@16 statements

    $default  reduce using rule 179 ($@16)

    $@16  go to state 369


State 359

  174 casestatement: "case" constant . ":" casestatement
  175              | "case" constant . error casestatement
  177              | "case" constant . ":" $@15 statements
  178              | "case" constant . error statements

    error  shift, and go to state 370
    ":"    shift, and go to state 371


State 360

  133 declarations: declarations decltype . typename variabledefs ";"

    "char"    shift, and go to state 6
    "string"  shift, and go to state 7
    "id"      shift, and go to state 10
    "float"   shift, and go to state 11
    "void"    shift, and go to state 12
    "int"     shift, and go to state 35

    typename       go to state 255
    standard_type  go to state 18


State 361

  168 decl_cases: declarations casestatements .
  172 casestatements: casestatements . casestatement

    "default"  shift, and go to state 345
    "case"     shift, and go to state 346

    $default  reduce using rule 168 (decl_cases)

    casestatement  go to state 363


State 362

  166 switch_tail: "{" decl_cases "}" .

    $default  reduce using rule 166 (switch_tail)


State 363

  172 casestatements: casestatements casestatement .

    $default  reduce using rule 172 (casestatements)


State 364

  182 single_casestatement: "case" constant ":" . single_casestatement
  184                     | "case" constant ":" . $@17 statement

    "case"  shift, and go to state 337

    $default  reduce using rule 183 ($@17)

    single_casestatement  go to state 372
    $@17                  go to state 373


State 365

   94 anonymous_union: "union" $@6 union_body $@7 ";" .

    $default  reduce using rule 94 (anonymous_union)


State 366

  155 if_tail: "else" $@11 . statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 374
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 367

  161 for_statement: "for" "(" $@13 optexpr ";" optexpr ";" optexpr ")" . statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 375
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 368

  137 statements: statements . statement
  181 casestatement: "default" error statements .

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "id"      reduce using rule 136 (decltype)
    $default  reduce using rule 181 (casestatement)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 197
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 369

  180 casestatement: "default" ":" $@16 . statements

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statements            go to state 376
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 370

  175 casestatement: "case" constant error . casestatement
  178              | "case" constant error . statements

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "default"           shift, and go to state 345
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "case"              shift, and go to state 346
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statements            go to state 377
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    casestatement         go to state 378
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 371

  174 casestatement: "case" constant ":" . casestatement
  177              | "case" constant ":" . $@15 statements

    "default"  shift, and go to state 345
    "case"     shift, and go to state 346

    $default  reduce using rule 176 ($@15)

    casestatement  go to state 379
    $@15           go to state 380


State 372

  182 single_casestatement: "case" constant ":" single_casestatement .

    $default  reduce using rule 182 (single_casestatement)


State 373

  184 single_casestatement: "case" constant ":" $@17 . statement

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 381
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 374

  155 if_tail: "else" $@11 statement .

    $default  reduce using rule 155 (if_tail)


State 375

  161 for_statement: "for" "(" $@13 optexpr ";" optexpr ";" optexpr ")" statement .

    $default  reduce using rule 161 (for_statement)


State 376

  137 statements: statements . statement
  180 casestatement: "default" ":" $@16 statements .

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "id"      reduce using rule 136 (decltype)
    $default  reduce using rule 180 (casestatement)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 197
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 377

  137 statements: statements . statement
  178 casestatement: "case" constant error statements .

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "id"      reduce using rule 136 (decltype)
    $default  reduce using rule 178 (casestatement)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 197
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 378

  175 casestatement: "case" constant error casestatement .

    $default  reduce using rule 175 (casestatement)


State 379

  174 casestatement: "case" constant ":" casestatement .

    $default  reduce using rule 174 (casestatement)


State 380

  177 casestatement: "case" constant ":" $@15 . statements

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    $default  reduce using rule 136 (decltype)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statements            go to state 382
    statement             go to state 109
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117


State 381

  184 single_casestatement: "case" constant ":" $@17 statement .

    $default  reduce using rule 184 (single_casestatement)


State 382

  137 statements: statements . statement
  177 casestatement: "case" constant ":" $@15 statements .

    "integer constant"  shift, and go to state 73
    "float constant"    shift, and go to state 74
    "string const"      shift, and go to state 75
    "static"            shift, and go to state 76
    "continue"          shift, and go to state 77
    "break"             shift, and go to state 78
    "if"                shift, and go to state 79
    "while"             shift, and go to state 80
    "for"               shift, and go to state 81
    "switch"            shift, and go to state 82
    "return"            shift, and go to state 83
    "new"               shift, and go to state 84
    "cin"               shift, and go to state 85
    "cout"              shift, and go to state 86
    "this"              shift, and go to state 87
    "+ or -"            shift, and go to state 88
    "-- or ++"          shift, and go to state 89
    "sizeof"            shift, and go to state 90
    "listfunc"          shift, and go to state 91
    "("                 shift, and go to state 92
    ";"                 shift, and go to state 93
    "["                 shift, and go to state 94
    "{"                 shift, and go to state 95
    "char const"        shift, and go to state 96
    "!"                 shift, and go to state 97
    "length"            shift, and go to state 98

    "id"      reduce using rule 136 (decltype)
    $default  reduce using rule 177 (casestatement)

    expression            go to state 99
    variable              go to state 100
    general_expression    go to state 101
    assignment            go to state 102
    constant              go to state 103
    listexpression        go to state 104
    decltype              go to state 144
    statement             go to state 197
    expression_statement  go to state 110
    if_statement          go to state 111
    while_statement       go to state 112
    for_statement         go to state 113
    switch_statement      go to state 114
    return_statement      go to state 115
    io_statement          go to state 116
    comp_statement        go to state 117
